[{"D:\\Code\\AdWeDo\\src\\index.js":"1","D:\\Code\\AdWeDo\\src\\serviceWorker.js":"2","D:\\Code\\AdWeDo\\src\\App.js":"3","D:\\Code\\AdWeDo\\src\\store\\reducers\\order.js":"4","D:\\Code\\AdWeDo\\src\\components\\Home\\HomePage.js":"5","D:\\Code\\AdWeDo\\src\\components\\Navigation\\Navbar.js":"6","D:\\Code\\AdWeDo\\src\\components\\Auth\\LoginForm.js":"7","D:\\Code\\AdWeDo\\src\\containers\\User\\Profile.js":"8","D:\\Code\\AdWeDo\\src\\components\\Auth\\Auth.js":"9","D:\\Code\\AdWeDo\\src\\containers\\User\\PrivateRoute.js":"10","D:\\Code\\AdWeDo\\src\\containers\\AdManager\\AdManager.js":"11","D:\\Code\\AdWeDo\\src\\shared\\utility.js":"12","D:\\Code\\AdWeDo\\src\\store\\actions\\actionTypes.js":"13","D:\\Code\\AdWeDo\\src\\components\\Home\\Jumbrotron.js":"14","D:\\Code\\AdWeDo\\src\\components\\Home\\InfoSection.js":"15","D:\\Code\\AdWeDo\\src\\components\\Auth\\SignupForm.js":"16","D:\\Code\\AdWeDo\\src\\base.js":"17","D:\\Code\\AdWeDo\\src\\axios.js":"18","D:\\Code\\AdWeDo\\src\\containers\\AdManager\\CreateAdForm.js":"19","D:\\Code\\AdWeDo\\src\\components\\Home\\SubscriptionPlans\\SubscriptionPlans.js":"20","D:\\Code\\AdWeDo\\src\\components\\Profile\\UserAds.js":"21","D:\\Code\\AdWeDo\\src\\components\\Home\\SubscriptionPlans\\SubscriptionCard.js":"22","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\AdPlacement\\AdPlacement.js":"23","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\Audience\\Audience.js":"24","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\GeneralInfo\\GeneralInfo.js":"25","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\Checkout\\Checkout.js":"26","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\BudgetAndSchedule\\BudgetAndSchedule.js":"27","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\Subscription\\Subscription.js":"28","D:\\Code\\AdWeDo\\src\\shared\\NumberCircle.js":"29","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\Subscription\\SubscriptionFormCard.js":"30","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\MarketingGoal\\MarketingGoal.js":"31","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\Checkout\\SubscriptionPlanInfo.js":"32","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\SocialPlatforms\\SocialPlatforms.js":"33","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\Checkout\\FbAdViewModal.js":"34","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\AdPlacement\\GoogleAd\\AdViewGoogle.js":"35","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\AdPlacement\\FacebookPlacements\\AdViewFb.js":"36","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\Checkout\\CheckoutBox.js":"37","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\Audience\\SelectForms.js":"38","D:\\Code\\AdWeDo\\src\\shared\\SubscriptionInfo.js":"39","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\MarketingGoal\\GoalCard.js":"40","D:\\Code\\AdWeDo\\src\\hoc\\Auxilliary.js":"41","D:\\Code\\AdWeDo\\src\\components\\AdManager\\selectFormsData.js":"42","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\AdPlacement\\FacebookPlacements\\FacebookPlacements.js":"43","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\AdPlacement\\GoogleAd\\GoogleAdForm.js":"44","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\AdPlacement\\PlacementSelectForms.js":"45","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\AdPlacement\\FacebookPlacements\\CustomBoxes.js":"46"},{"size":907,"mtime":1598294103317,"results":"47","hashOfConfig":"48"},{"size":5227,"mtime":1593953900174,"results":"49","hashOfConfig":"48"},{"size":1257,"mtime":1614853538900,"results":"50","hashOfConfig":"48"},{"size":5978,"mtime":1603731895941,"results":"51","hashOfConfig":"48"},{"size":547,"mtime":1593953900171,"results":"52","hashOfConfig":"48"},{"size":4709,"mtime":1614605509625,"results":"53","hashOfConfig":"48"},{"size":5944,"mtime":1614604859667,"results":"54","hashOfConfig":"48"},{"size":9800,"mtime":1611245478337,"results":"55","hashOfConfig":"48"},{"size":882,"mtime":1614605353253,"results":"56","hashOfConfig":"48"},{"size":1942,"mtime":1614606792460,"results":"57","hashOfConfig":"48"},{"size":1842,"mtime":1614854214012,"results":"58","hashOfConfig":"48"},{"size":442,"mtime":1593953900174,"results":"59","hashOfConfig":"48"},{"size":1019,"mtime":1601890840529,"results":"60","hashOfConfig":"48"},{"size":1750,"mtime":1614963861930,"results":"61","hashOfConfig":"48"},{"size":3290,"mtime":1614506458443,"results":"62","hashOfConfig":"48"},{"size":6768,"mtime":1608547794234,"results":"63","hashOfConfig":"48"},{"size":1082,"mtime":1608482601488,"results":"64","hashOfConfig":"48"},{"size":156,"mtime":1593953900166,"results":"65","hashOfConfig":"48"},{"size":6675,"mtime":1614854579636,"results":"66","hashOfConfig":"48"},{"size":2191,"mtime":1615198533425,"results":"67","hashOfConfig":"48"},{"size":892,"mtime":1611245936956,"results":"68","hashOfConfig":"48"},{"size":977,"mtime":1607359664108,"results":"69","hashOfConfig":"48"},{"size":10063,"mtime":1607427594473,"results":"70","hashOfConfig":"48"},{"size":9910,"mtime":1615199046022,"results":"71","hashOfConfig":"48"},{"size":6091,"mtime":1614853921241,"results":"72","hashOfConfig":"48"},{"size":20892,"mtime":1614609432283,"results":"73","hashOfConfig":"48"},{"size":22915,"mtime":1607427585960,"results":"74","hashOfConfig":"48"},{"size":8527,"mtime":1615199580835,"results":"75","hashOfConfig":"48"},{"size":219,"mtime":1607631221199,"results":"76","hashOfConfig":"48"},{"size":2362,"mtime":1607359352757,"results":"77","hashOfConfig":"48"},{"size":4300,"mtime":1593953900170,"results":"78","hashOfConfig":"48"},{"size":1620,"mtime":1614611335780,"results":"79","hashOfConfig":"48"},{"size":3367,"mtime":1607359817951,"results":"80","hashOfConfig":"48"},{"size":1649,"mtime":1604764212749,"results":"81","hashOfConfig":"48"},{"size":702,"mtime":1593953900168,"results":"82","hashOfConfig":"48"},{"size":5523,"mtime":1606393855183,"results":"83","hashOfConfig":"48"},{"size":205,"mtime":1603186936256,"results":"84","hashOfConfig":"48"},{"size":4386,"mtime":1610805882936,"results":"85","hashOfConfig":"48"},{"size":1347,"mtime":1614610567480,"results":"86","hashOfConfig":"48"},{"size":385,"mtime":1593953900170,"results":"87","hashOfConfig":"48"},{"size":75,"mtime":1593953900174,"results":"88","hashOfConfig":"48"},{"size":24705,"mtime":1593953900170,"results":"89","hashOfConfig":"48"},{"size":16763,"mtime":1614855053309,"results":"90","hashOfConfig":"48"},{"size":6049,"mtime":1607359574769,"results":"91","hashOfConfig":"48"},{"size":3336,"mtime":1607359631820,"results":"92","hashOfConfig":"48"},{"size":2606,"mtime":1604058567114,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"ailgz7",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"96"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"96"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"96"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"96"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"96"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"96"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"96"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"96"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"96"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"96"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"96"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"96"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"96"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"96"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"96"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"96"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"96"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"96"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"96"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"96"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"96"},"D:\\Code\\AdWeDo\\src\\index.js",[],["214","215"],"D:\\Code\\AdWeDo\\src\\serviceWorker.js",[],"D:\\Code\\AdWeDo\\src\\App.js",[],"D:\\Code\\AdWeDo\\src\\store\\reducers\\order.js",[],"D:\\Code\\AdWeDo\\src\\components\\Home\\HomePage.js",[],"D:\\Code\\AdWeDo\\src\\components\\Navigation\\Navbar.js",["216","217","218","219","220","221","222","223"],"import React, { useContext, useState } from \"react\";\r\nimport { Link, NavLink, Redirect, useHistory } from \"react-router-dom\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { AuthContext } from \"../Auth/Auth\";\r\nimport app from \"../../base\";\r\nimport LoginForm from \"../Auth/LoginForm\";\r\nimport SignupForm from \"../Auth/SignupForm\";\r\nimport homePic from \"../../assets/home.png\";\r\n\r\nconst Navbar = () => {\r\n  const [show, setShow] = useState(false);\r\n  const [isSignup, setIsSignup] = useState(true);\r\n  // const [showMenu, setShowMenu] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const openSignUpModal = () => {\r\n    // Hide navbar in mobile view\r\n    closeNavbarWhenClicked();\r\n\r\n    setIsSignup(true);\r\n    handleShow();\r\n  };\r\n\r\n  const openLoginModal = () => {\r\n    // Hide navbar in mobile view\r\n    closeNavbarWhenClicked();\r\n\r\n    setIsSignup(false);\r\n    handleShow();\r\n  };\r\n\r\n  const handleSignOut = () => {\r\n    // Hide navbar in mobile view\r\n    closeNavbarWhenClicked();\r\n\r\n    // Sign out from firebase auth\r\n    app.auth().signOut();\r\n\r\n    history.push(\"/\")\r\n  };\r\n\r\n  // Hide collapse when a nav link is clicked in mobile view\r\n  const closeNavbarWhenClicked = () => {\r\n    var navBar = document.getElementById(\"navbarNav\");\r\n    var navLink = document.getElementById(\"navbarBtn\");\r\n\r\n    navBar.classList.remove(\"show\");\r\n    navLink.classList.add(\"collapsed\");\r\n  };\r\n\r\n  let navbarItems = (\r\n    <ul className=\"navbar-nav\">\r\n      <li className=\"nav-item\">\r\n        <NavLink\r\n          to=\"/contact\"\r\n          className=\"nav-link\"\r\n          onClick={() => closeNavbarWhenClicked()}\r\n        >\r\n          Contact us\r\n        </NavLink>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a onClick={openLoginModal} className=\"nav-link\">\r\n          Login\r\n        </a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a onClick={openSignUpModal} className=\"nav-link\">\r\n          Sign up\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  if (currentUser) {\r\n    navbarItems = (\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <NavLink\r\n            to=\"/ad-manager\"\r\n            className=\"nav-link\"\r\n            onClick={() => closeNavbarWhenClicked()}\r\n            activeClassName=\"is-active\"\r\n          >\r\n            Ad Manager\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <NavLink\r\n            to=\"/contact\"\r\n            className=\"nav-link\"\r\n            onClick={() => closeNavbarWhenClicked()}\r\n            activeClassName=\"is-active\"\r\n          >\r\n            Contact us\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <NavLink\r\n            to=\"/profile\"\r\n            className=\"nav-link\"\r\n            onClick={() => closeNavbarWhenClicked()}\r\n            activeClassName=\"is-active\"\r\n          >\r\n            Profile\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a onClick={() => handleSignOut()} className=\"nav-link\">\r\n            Log out\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  const changeToSignup = (e) => {\r\n    e.preventDefault();\r\n\r\n    setIsSignup(true);\r\n  };\r\n\r\n  const changeToLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    setIsSignup(false);\r\n  };\r\n\r\n  let authType = (\r\n    <LoginForm\r\n      show={show}\r\n      handleClose={handleClose}\r\n      changeToSignup={changeToSignup}\r\n    />\r\n  );\r\n\r\n  if (isSignup) {\r\n    authType = (\r\n      <SignupForm\r\n        show={show}\r\n        handleClose={handleClose}\r\n        changeToLogin={changeToLogin}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    // sticky-navbar class\r\n    <div className=\"sticky-navbar\">\r\n      <nav className=\"navbar navbar-expand-lg navbar-light \">\r\n        <NavLink\r\n          to=\"/\"\r\n          className=\"nav-link logo-text\"\r\n          onClick={() => closeNavbarWhenClicked()}\r\n        >\r\n          {/* <img src={homePic} className=\"homeBtn\" alt=\"homePic\"/> */}\r\n          AWD\r\n        </NavLink>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          id=\"navbarBtn\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          {navbarItems}\r\n        </div>\r\n      </nav>\r\n\r\n      {authType}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","D:\\Code\\AdWeDo\\src\\components\\Auth\\LoginForm.js",["224","225","226","227","228"],"import React, { useContext, useCallback, useState } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { AuthContext } from \"./Auth\";\r\n\r\n// Firebase\r\nimport app, { db } from \"../../base\";\r\nimport axios from \"../../axios\";\r\nimport { doSignInWithFacebook } from \"../../base\";\r\n\r\n// Social media icons\r\nimport facebookIcon from \"../../assets/facebookIcon.png\";\r\nimport googleIcon from \"../../assets/googleIcon.png\";\r\nimport twitterIcon from \"../../assets/twitterIcon.png\";\r\n\r\nconst LoginForm = ({ history, ...props }) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSignIn = useCallback(\r\n    async (event) => {\r\n      event.preventDefault();\r\n      const { email, password } = event.target.elements;\r\n\r\n      try {\r\n        await app\r\n          .auth()\r\n          .signInWithEmailAndPassword(email.value, password.value);\r\n\r\n        props.handleClose();\r\n\r\n        // Redirect to path that user tried to reach\r\n        history.push(history.location.pathname);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      }\r\n    },\r\n    [history]\r\n  );\r\n\r\n  const signInWithFacebook = useCallback(\r\n    async (event) => {\r\n      event.preventDefault();\r\n\r\n      try {\r\n        await doSignInWithFacebook()\r\n          .then(async (registeredUser) => {\r\n            // const name =  registeredUser.user.displayName.split(/(?=[A-Z])/);\r\n            axios\r\n              .get(`/users/${registeredUser.user.uid}.json`)\r\n              .then((response) => {\r\n                if (response.data === null) {\r\n                  const userData = {\r\n                    firstName: registeredUser.user.displayName.split(\" \")[0],\r\n                    lastName: registeredUser.user.displayName.split(\" \")[1],\r\n                    email: registeredUser.user.email,\r\n                    country: \"\",\r\n                    city: \"\",\r\n                    photoUrl: `${registeredUser.user.photoURL}?width=400&height=400`,\r\n                  };\r\n\r\n                  db.ref(\"users/\" + registeredUser.user.uid).set(userData);\r\n                }\r\n              });\r\n          })\r\n          .then(\r\n            // Redirect to path that user tried to reach\r\n            history.push(history.location.pathname)\r\n          );\r\n      } catch (error) {\r\n        setError(error.message);\r\n      }\r\n    },\r\n    [history]\r\n  );\r\n\r\n  if (currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Modal className=\"\" show={props.show} onHide={props.handleClose}>\r\n        <div className=\"modal-body \">\r\n          <Modal.Header className=\"modal-header text-center\">\r\n            <h1 className=\"modal-header-label font-color\">Login</h1>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"auth-form-social-buttons\">\r\n              {/* <p className=\"auth-form-social-label border-bottom text-center font-color\">Login via social media</p> */}\r\n              <div className=\"d-flex justify-content-center\">\r\n                {/* <button onClick={signInWithFacebook} className=\"btn btn-lg btn-facebook\">Facebook</button> */}\r\n                <a onClick={signInWithFacebook} href=\"\">\r\n                  <img\r\n                    className=\"auth-form-social-icon\"\r\n                    src={facebookIcon}\r\n                    alt=\"facebook icon\"\r\n                  />\r\n                </a>\r\n                <a onClick={() => {}} href=\"\">\r\n                  <img\r\n                    className=\"auth-form-social-icon\"\r\n                    src={googleIcon}\r\n                    alt=\"google icon\"\r\n                  />\r\n                </a>\r\n                <a onClick={() => {}} href=\"\">\r\n                  <img\r\n                    className=\"auth-form-social-icon\"\r\n                    src={twitterIcon}\r\n                    alt=\"twitter icon\"\r\n                  />\r\n                </a>\r\n                {/* <button className=\"btn btn-lg btn-google\">Google</button> */}\r\n              </div>\r\n            </div>\r\n            <p className=\"auth-form-social-label border-bottom text-center font-color\">\r\n              or\r\n            </p>\r\n            <form className=\"auth-form\" onSubmit={handleSignIn}>\r\n              {error ? <p className=\"errorMsg\">{error}</p> : null}\r\n              <div className=\"form-group auth-form-field\">\r\n                <label for=\"exampleInputEmail1\">Email address</label>\r\n                <input\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"exampleInputEmail1\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  placeholder=\"Enter email\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group auth-form-field\">\r\n                <label for=\"exampleInputPassword1\">Password</label>\r\n                <input\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"exampleInputPassword1\"\r\n                  placeholder=\"Enter your password\"\r\n                />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted small\">\r\n                  We'll never share your email or password with anyone.\r\n                </small>\r\n              </div>\r\n\r\n              <div class=\"auth-form-submit text-center\">\r\n                <button type=\"submit\" className=\"btn btn-login \">\r\n                  Login\r\n                </button>\r\n                <a href=\"\" className=\"small align-bottom \">\r\n                  <p className=\"d-inline\" onClick={props.changeToSignup}>\r\n                    Don't have an account?\r\n                  </p>\r\n                </a>\r\n              </div>\r\n            </form>\r\n          </Modal.Body>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginForm);\r\n","D:\\Code\\AdWeDo\\src\\containers\\User\\Profile.js",["229","230","231","232"],"import React, { PureComponent } from \"react\";\r\n// import { withRouter } from 'react-router';\r\nimport changePictureIcon from \"../../assets/changePic.png\";\r\nimport { AuthContext } from \"../../components/Auth/Auth\";\r\nimport app, { db } from \"../../base\";\r\nimport axios from \"../../axios\";\r\nimport _ from \"lodash\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport UserAds from \"../../components/Profile/UserAds\";\r\n\r\nclass Profile extends PureComponent {\r\n  static contextType = AuthContext;\r\n\r\n  state = {\r\n    userData: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      uid: \"\",\r\n      city: \"\",\r\n      country: \"\",\r\n      photoUrl: \"\",\r\n    },\r\n    currentUser: {},\r\n    showAlert: false,\r\n    alertType: \"\",\r\n    errorMsg: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { currentUser } = this.context;\r\n    // console.log('currentUser', currentUser)\r\n\r\n    axios.get(`/users/${currentUser.uid}.json`).then((response) => {\r\n      // console.log(\"res profile\", response.data)\r\n\r\n      const userData = {\r\n        currentUser: currentUser,\r\n        firstName: response.data.firstName,\r\n        lastName: response.data.lastName,\r\n        email: response.data.email,\r\n        city: response.data.city,\r\n        country: response.data.country,\r\n        photoUrl: response.data.photoUrl,\r\n      };\r\n\r\n      this.setState({\r\n        userData: userData,\r\n      });\r\n    });\r\n  }\r\n\r\n  // console.log(\"currentUser\", currentUser)\r\n  updateStateFromInput = (value, name) => {\r\n    this.setState({\r\n      userData: {\r\n        ...this.state.userData,\r\n        [name]: value,\r\n      },\r\n    });\r\n  };\r\n\r\n  setErrorAlert = (error) => {\r\n    this.setState({\r\n      showAlert: true,\r\n      alertType: \"danger\",\r\n      errorMsg: error.message,\r\n    });\r\n  };\r\n  setSuccessAlert = (error) => {\r\n    this.setState({ showAlert: true, alertType: \"success\" });\r\n  };\r\n\r\n  saveChanges = (e) => {\r\n    e.preventDefault();\r\n    const { currentUser } = this.context;\r\n\r\n    const firstName = e.target[0].value;\r\n    const lastName = e.target[1].value;\r\n    const newCountry = e.target[2].value;\r\n    const newCity = e.target[3].value;\r\n\r\n    let newData = {\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      email: currentUser.email,\r\n      country: newCountry,\r\n      city: newCity,\r\n      photoUrl: this.state.userData.photoUrl,\r\n    };\r\n\r\n    axios.get(`/users/${currentUser.uid}.json`).then((response) => {\r\n      const noChanges = _.isEqual(response.data, newData);\r\n      // console.log(noChanges)\r\n\r\n      if (noChanges === false) {\r\n        // Update displayName in the firebase authentication account\r\n        currentUser\r\n          .updateProfile({\r\n            displayName: firstName + \" \" + lastName,\r\n            photoURL: this.state.userData.photoUrl,\r\n          })\r\n          .then(() => {\r\n            var updates = {};\r\n            updates[\"/users/\" + currentUser.uid] = newData;\r\n            //to search and replace\r\n            const replaceAll = (s = \"\", f = \"\", r = \"\") =>\r\n              s.replace(\r\n                new RegExp(f.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\"), \"g\"),\r\n                r\r\n              );\r\n\r\n            db.ref().update(updates);\r\n\r\n            this.setState({ showAlert: true, alertType: \"success\" });\r\n          })\r\n          .catch((error) => {\r\n            this.setState({\r\n              showAlert: true,\r\n              alertType: \"danger\",\r\n              errorMsg: error.message,\r\n            });\r\n          });\r\n      } else {\r\n        this.setState({ showAlert: true, alertType: \"noChanges\" });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // let profilePicClasses = [\"profile-pic\", ]\r\n    const userData = this.state.userData;\r\n    // console.log(this.context.currentUser)\r\n\r\n    let alert;\r\n    if (this.state.showAlert) {\r\n      if (this.state.alertType === \"noChanges\") {\r\n        alert = (\r\n          <Alert\r\n            variant=\"warning\"\r\n            onClose={() => this.setState({ showAlert: false })}\r\n            dismissible\r\n          >\r\n            There are no changes detected\r\n          </Alert>\r\n        );\r\n      }\r\n      if (this.state.alertType === \"success\") {\r\n        alert = (\r\n          <Alert\r\n            variant=\"success\"\r\n            onClose={() => this.setState({ showAlert: false })}\r\n            dismissible\r\n          >\r\n            Successfully updated profile information\r\n          </Alert>\r\n        );\r\n      }\r\n      if (this.state.alertType === \"danger\") {\r\n        alert = (\r\n          <Alert\r\n            variant=\"danger\"\r\n            onClose={() => this.setState({ showAlert: false })}\r\n            dismissible\r\n          >\r\n            {this.state.errorMsg}\r\n          </Alert>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"profile-bgc\">\r\n        <div className=\"profile-page\">\r\n          <div className=\"profile-card\">\r\n            <span className=\"profile-pic-bubble\">\r\n              <a href=\"\">\r\n                <img\r\n                  className=\"profile-pic-img\"\r\n                  src={userData.photoUrl}\r\n                  alt=\"profile pic\"\r\n                />\r\n                <img\r\n                  className=\"profile-pic-change\"\r\n                  src={changePictureIcon}\r\n                  alt=\"changeProfilePic\"\r\n                />\r\n              </a>\r\n            </span>\r\n\r\n            <div className=\"profile-info\">\r\n              <div className=\"text-center mb-4\">\r\n                <h1 className=\"profile-heading purple\">My Profile</h1>\r\n              </div>\r\n\r\n              <div className=\"profile-form row\">\r\n                <form onSubmit={this.saveChanges} className=\"col-lg-6\">\r\n                  <div className=\"row justify-content-center\">\r\n                    <h1 className=\"purple\">Info</h1>\r\n                  </div>\r\n\r\n                  {alert}\r\n\r\n                  <div className=\"email-info d-md-flex mt-4 \">\r\n                    <p className=\"mr-3 h4 align-text-bottom\">Email address:</p>\r\n                    <p className=\"gray \">{userData.email}</p>\r\n                  </div>\r\n                  <div className=\"form-row mb-2\">\r\n                    <div className=\"form-group col-md-12\">\r\n                      <label for=\"inputFirstName\">First name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"firstName\"\r\n                        onChange={(e) =>\r\n                          this.updateStateFromInput(\r\n                            e.target.value,\r\n                            e.target.name\r\n                          )\r\n                        }\r\n                        className=\"form-control\"\r\n                        id=\"inputFirstName\"\r\n                        value={userData.firstName}\r\n                        placeholder=\"Your first name\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-row mb-2\">\r\n                    <div className=\"form-group col-md-12\">\r\n                      <label for=\"inputEmail4\">Last name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"lastName\"\r\n                        onChange={(e) =>\r\n                          this.updateStateFromInput(\r\n                            e.target.value,\r\n                            e.target.name\r\n                          )\r\n                        }\r\n                        className=\"form-control\"\r\n                        id=\"inputLastName\"\r\n                        value={userData.lastName}\r\n                        placeholder=\"Your last name\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-row mb-2\">\r\n                    <div className=\"form-group col-md-12\">\r\n                      <label for=\"inputAddress\">Country</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"country\"\r\n                        value={userData.country}\r\n                        onChange={(e) =>\r\n                          this.updateStateFromInput(\r\n                            e.target.value,\r\n                            e.target.name\r\n                          )\r\n                        }\r\n                        className=\"form-control\"\r\n                        id=\"inputAddress\"\r\n                        placeholder=\"Your country\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-row mb-2\">\r\n                    <div className=\"form-group col-md-12\">\r\n                      <label for=\"inputCity\">City</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"city\"\r\n                        value={userData.city}\r\n                        onChange={(e) =>\r\n                          this.updateStateFromInput(\r\n                            e.target.value,\r\n                            e.target.name\r\n                          )\r\n                        }\r\n                        className=\"form-control\"\r\n                        id=\"inputCity\"\r\n                        placeholder=\"Your city\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"text-center mt-4\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-block btn-save-changes \"\r\n                    >\r\n                      Save changes\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n                <div className=\"col-lg-6 mb-4 mx-none\">\r\n                  <UserAds />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","D:\\Code\\AdWeDo\\src\\components\\Auth\\Auth.js",[],"D:\\Code\\AdWeDo\\src\\containers\\User\\PrivateRoute.js",["233","234"],"import React, { useContext, useState } from \"react\";\r\nimport { Route, Redirect, useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../components/Auth/Auth\";\r\nimport LoginForm from \"../../components/Auth/LoginForm\";\r\nimport SignupForm from \"../../components/Auth/SignupForm\";\r\nimport Homepage from \"../../components/Home/HomePage\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [showLoginForm, setShowLoginForm] = useState(true);\r\n  const [showSignupForm, setShowSignupForm] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  // Get path that user is trying to reach from URL\r\n  const path = history.location.pathname;\r\n  // console.log(\"history\",history.location.pathname)\r\n\r\n  const changeToSignup = (e) => {\r\n    e.preventDefault();\r\n\r\n    setShowLoginForm(false);\r\n    setShowSignupForm(true);\r\n  };\r\n\r\n  const changeToLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    setShowLoginForm(true);\r\n    setShowSignupForm(false);\r\n  };\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(routeProps) =>\r\n        !!currentUser ? (\r\n          <RouteComponent {...routeProps} />\r\n        ) : (\r\n          <>\r\n            <Homepage />\r\n            <LoginForm\r\n              show={showLoginForm}\r\n              handleClose={() => {\r\n                setShowLoginForm(false);\r\n                // Redirect if user closes form\r\n                history.push(\"/\");\r\n              }}\r\n              changeToSignup={changeToSignup}\r\n            />\r\n            <SignupForm\r\n              show={showSignupForm}\r\n              handleClose={() => {\r\n                setShowSignupForm(false);\r\n                // Redirect if user closes form\r\n                history.push(\"/\");\r\n              }}\r\n              changeToLogin={changeToLogin}\r\n            />\r\n          </>\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","D:\\Code\\AdWeDo\\src\\containers\\AdManager\\AdManager.js",["235","236","237","238","239","240","241"],"import React, { PureComponent } from \"react\";\r\nimport { Route, Redirect, withRouter, Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../components/Auth/Auth\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\n// Components\r\nimport CreateAdForm from \"./CreateAdForm\";\r\nimport PrivateRoute from \"../../containers/User/PrivateRoute\";\r\n\r\nclass AdManager extends PureComponent {\r\n  //   const {currentUser} = this.context;\r\n  //   static contextType = AuthContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.headingRef = React.createRef();\r\n  }\r\n\r\n\r\n  createAdCampaign = () => {\r\n      this.props.history.push(\"/ad-manager/new-campaign\")\r\n  }\r\n\r\n  render() {\r\n    let adSection = (\r\n      <div className=\"manager-ad-form-row text-center\">\r\n        <div className=\"first\">\r\n          <h2 className=\"\">You have no running ads at the moment</h2>\r\n          <div class=\"d-flex button-container justify-content-center\">\r\n            <button\r\n              onClick={this.createAdCampaign}\r\n              className=\"btn btn-add text-align-center d-flex\"\r\n            >\r\n              <i class=\"far fa-plus-square\"></i> Create a campaign\r\n            </button>\r\n            <button className=\"btn btn-watch-tutorial d-flex\">\r\n              <i class=\"fas fa-video\"></i>Watch tutorial\r\n            </button>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className=\"manager\">\r\n        <div className=\"manager-jumbotron d-md-flex justify-content-between\">\r\n          <h1\r\n            ref={this.headingRef}\r\n            className=\"manager-jumbotron-title dark-purple-font\"\r\n          >\r\n            Ad Dashboard\r\n          </h1>\r\n        </div>\r\n        <div className=\"manager-ad-form\">\r\n          {adSection}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AdManager);\r\n","D:\\Code\\AdWeDo\\src\\shared\\utility.js",[],"D:\\Code\\AdWeDo\\src\\store\\actions\\actionTypes.js",[],"D:\\Code\\AdWeDo\\src\\components\\Home\\Jumbrotron.js",["242"],"import React, { useState, useContext } from \"react\";\r\nimport app from \"../../base\";\r\nimport { Link } from 'react-router-dom'\r\nimport { AuthContext } from \"../Auth/Auth\";\r\nimport SignupForm from \"../Auth/SignupForm\";\r\nimport LoginForm from \"../Auth/LoginForm\";\r\n\r\nconst Jumbotron = (props) => {\r\n  const [showSignupForm, setShowSignupForm] = useState(false);\r\n  const [showLoginForm, setShowLoginForm] = useState(false);\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  const changeToLogin = (e) => {\r\n    e.preventDefault();\r\n    setShowSignupForm(false);\r\n    setShowLoginForm(true);\r\n  };\r\n\r\n  const changeToSignup = (e) => {\r\n    e.preventDefault();\r\n    setShowSignupForm(true);\r\n    setShowLoginForm(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"jumbotron container text-center\">\r\n      <h1>Welcome to AdWeDo</h1>\r\n      <p className=\"\">\r\n        We run Facebook, Instagram and Google ads for you. Sign up, choose your\r\n        audience and run your ads.\r\n      </p>\r\n      {currentUser ? (\r\n        <Link to=\"/ad-manager\"\r\n          className=\"btn btn-signup \"\r\n        >\r\n          Open Ad Manager\r\n        </Link>\r\n      ) : (\r\n        <>\r\n          <button\r\n            onClick={() => setShowSignupForm(true)}\r\n            className=\"btn btn-signup \"\r\n          >\r\n            Sign Up\r\n          </button>\r\n          <SignupForm\r\n            show={showSignupForm}\r\n            handleClose={(e) => setShowSignupForm(false)}\r\n            changeToLogin={changeToLogin}\r\n          />\r\n          <LoginForm\r\n            show={showLoginForm}\r\n            handleClose={(e) => setShowLoginForm(false)}\r\n            changeToSignup={changeToSignup}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Jumbotron;\r\n","D:\\Code\\AdWeDo\\src\\components\\Home\\InfoSection.js",["243"],"import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport phone from '../../assets/phone.jpg'\r\nimport facebookIcon from '../../assets/facebookIcon.png'\r\nimport instagramIcon from '../../assets/instagramIcon.png'\r\nimport googleIcon from '../../assets/googleIcon.png'\r\nimport twitterIcon from '../../assets/twitterIcon.png'\r\nimport iconsPic from '../../assets/iconsPic.png'\r\n\r\nconst InfoSection = props =>{\r\n\r\n\r\n    return(\r\n        <div className=\"info-section\">\r\n            \r\n           <div className=\"row info-section-row \">\r\n               <div className=\"col-xl-6 offset-xl-3 order-xl-2 text-center\">\r\n                  \r\n                   <h2 className=\"info-text-container-heading\">Choose social platforms</h2>\r\n                        <p  className=\"info-text-container-paragraph \">Running social ads on more than one social media platform is the key to a successful ad campaign. You can choose in which platforms below you want your ads to appear.</p>\r\n                        <ul className=\"info-text-container-icons \">\r\n                            <li><img src={facebookIcon} alt=\"facebookIcon\"/> </li>\r\n                            <li><img src={instagramIcon} alt=\"instagramIcon\"/> </li>\r\n                            <li><img src={googleIcon} alt=\"googleIcon\"/></li>\r\n                            <li><img src={twitterIcon} alt=\"twitterIcon\"/></li>\r\n                        </ul>\r\n                </div>\r\n                \r\n           </div>\r\n\r\n           <div className=\"row info-section-row\">\r\n               <div className=\"col-xl-6 text-center\">\r\n                   <div className=\"info-text-container\">\r\n                   <div className=\"info-text-container\">\r\n                        <h2 className=\"info-text-container-heading\">Fill a form and run your ads</h2>\r\n                        <p  className=\"info-text-container-paragraph\">Social Ads allows you to choose your target audience, your budget, in which country you want your advertisement to be run and many more.</p>\r\n\r\n                   </div>\r\n                   <button className=\"btn btn-lg info-text-container-button-border\">Check out how</button>\r\n                       \r\n                   </div>\r\n            </div>\r\n           </div>\r\n           <div className=\"row info-section-row\">\r\n                <div className=\"col-xl-1 text-center ml-xl-4 mb-4\">\r\n                    <img src={iconsPic} className=\"social-pic\" alt=\"iconsPic\"/>\r\n               </div>\r\n               <div className=\"col-xl-8  offset-xl-1 text-center\">\r\n                   <div className=\"info-text-container\">\r\n                        <h2 className=\"info-text-container-heading\">Keep track of your running ads</h2>\r\n                        <p className=\"info-text-container-paragraph col-lg-8\">With the online Ad Manager you can create, run and track your social media advertising. \r\n                        We believe we have a reliable, convenient and robust tracking system which main aim is to simplify the proccess of running online ads.</p>\r\n                        <Link to=\"ad-manager\" className=\"btn btn-lg info-text-container-button\">Go to Ad Manager</Link>\r\n                   </div>\r\n                </div>\r\n                \r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoSection;","D:\\Code\\AdWeDo\\src\\components\\Auth\\SignupForm.js",["244","245","246","247","248","249"],"import React, { useCallback, useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Modal } from 'react-bootstrap';\r\nimport axios from '../../axios';\r\n\r\n// Firebase \r\nimport * as firebase from 'firebase/app';\r\nimport app,{ db } from \"../../base\";\r\nimport 'firebase/firestore'\r\nimport { doSignInWithFacebook } from '../../base';\r\n\r\n\r\n// Social media icons\r\nimport facebookIcon from \"../../assets/facebookIcon.png\";\r\nimport googleIcon from \"../../assets/googleIcon.png\";\r\nimport twitterIcon from \"../../assets/twitterIcon.png\";\r\n\r\n\r\nconst SignupForm = ({history, ...props}) =>{\r\n  const [error, setError] = useState(null)\r\n\r\n    const handleSignUp = useCallback(async event => {\r\n        event.preventDefault();\r\n\r\n        const { email, password } = event.target.elements;\r\n        const firstName = event.target.firstName.value\r\n        const lastName = event.target.lastName.value\r\n        \r\n        try {\r\n          await app\r\n            .auth()\r\n            .createUserWithEmailAndPassword(email.value, password.value)\r\n            .then( registeredUser => {\r\n                let userData = { \r\n                  email: email.value,\r\n                  firstName: firstName,\r\n                  lastName: lastName,\r\n                  country: '',\r\n                  city: '',\r\n                  photoUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Microsoft_Account.svg/1200px-Microsoft_Account.svg.png'\r\n                }\r\n\r\n                db.ref(\"users/\"+ registeredUser.user.uid).set(userData)\r\n              }\r\n            )\r\n            \r\n            props.handleClose();\r\n          // history.push(\"/\");\r\n        } catch (error) {\r\n          setError(error.message);\r\n        }\r\n      }, [history]);\r\n\r\n\r\n      const signInWithFacebook = useCallback(async event => {\r\n        event.preventDefault();\r\n       \r\n        try {\r\n            await doSignInWithFacebook()\r\n            .then( async registeredUser => {\r\n              // const name =  registeredUser.user.displayName.split(/(?=[A-Z])/);\r\n              axios.get(`/users/${registeredUser.user.uid}.json`)\r\n            .then(response =>{\r\n              if(response.data === null){\r\n                const userData = { \r\n                  // Save first name and last name separately \r\n                  firstName: registeredUser.user.displayName.split(\" \")[0],\r\n                  lastName:  registeredUser.user.displayName.split(\" \")[1],\r\n                  email: registeredUser.user.email,\r\n                  country: '',\r\n                  city: '',\r\n                  photoUrl: `${registeredUser.user.photoURL}?width=400&height=400`\r\n                }\r\n  \r\n                db.ref(\"users/\"+ registeredUser.user.uid).set(userData)\r\n              }\r\n            })\r\n          }).then(\r\n                // props.handleClose()\r\n                  history.push(\"/\")\r\n            )\r\n          } catch (error) {\r\n            setError(error.message);\r\n          }\r\n      }, [history]);\r\n\r\n      \r\n\r\n    return(\r\n        <div className=\"container\">\r\n          <Modal className=\"\" show={props.show} onHide={props.handleClose}>\r\n                <div className=\"modal-body \">\r\n                  <Modal.Header  className=\"modal-header text-center\">\r\n                      <h1 className=\"modal-header-label font-color\">Sign up</h1>\r\n                  </Modal.Header>\r\n                  <Modal.Body>\r\n                      <div className=\"auth-form-social-buttons\">\r\n                        {/* <p className=\"auth-form-social-label border-bottom text-center font-color\">Login via social media</p> */}\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            {/* <button onClick={signInWithFacebook} className=\"btn btn-lg btn-facebook\">Facebook</button> */}\r\n                            <a onClick={signInWithFacebook} href=\"\"><img className=\"auth-form-social-icon\" src={facebookIcon} alt=\"facebook icon\" /></a>\r\n                            <a onClick={() => {}} href=\"\"><img className=\"auth-form-social-icon\" src={googleIcon} alt=\"google icon\" /></a>\r\n                            <a onClick={() => {}} href=\"\"><img className=\"auth-form-social-icon\" src={twitterIcon} alt=\"twitter icon\" /></a>\r\n                            {/* <button className=\"btn btn-lg btn-google\">Google</button> */}\r\n                        </div>\r\n                      </div>\r\n                      <p className=\"auth-form-social-label border-bottom text-center font-color\">or</p>\r\n                      <form className=\"auth-form\" onSubmit={handleSignUp}>\r\n                          {error ? <p className=\"errorMsg\">{error}</p> : null}\r\n                          <div className=\"form-group auth-form-field\">\r\n                              <label for=\"exampleInputPassword1\">First Name</label>\r\n                              <input name=\"firstName\" type=\"text\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Enter your first name\" />\r\n                          </div>\r\n                          <div className=\"form-group auth-form-field\">\r\n                              <label for=\"exampleInputPassword1\">Last Name</label>\r\n                              <input name=\"lastName\" type=\"text\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Enter your last name\" />\r\n                          </div>\r\n                          <div className=\"form-group auth-form-field\">\r\n                              <label for=\"exampleInputEmail1\">Email address</label>\r\n                              <input name=\"email\" type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\r\n                          </div>\r\n                          \r\n                          <div className=\"form-group auth-form-field\">\r\n                              <label for=\"exampleInputPassword1\">Password</label>\r\n                              <input name=\"password\" type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" />\r\n                              <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email or password with anyone.</small>\r\n\r\n                          </div>\r\n                          <div class=\"auth-form-submit text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-lg btn-login \">Sign up</button>\r\n                            <a href=\"\" className=\"small align-bottom ml-3\"><h7 onClick={props.changeToLogin}>Already have an account?</h7></a>\r\n                          </div>\r\n                      </form>\r\n                      \r\n                  </Modal.Body> \r\n                </div>\r\n        </Modal>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(SignupForm);","D:\\Code\\AdWeDo\\src\\base.js",[],"D:\\Code\\AdWeDo\\src\\axios.js",[],"D:\\Code\\AdWeDo\\src\\containers\\AdManager\\CreateAdForm.js",["250","251","252","253","254"],"import React, { PureComponent } from \"react\";\r\n// Auth\r\nimport { db } from \"../../base\";\r\nimport { AuthContext } from \"../../components/Auth/Auth\";\r\n\r\n// import { Route, Redirect } from \"react-router-dom\";\r\n// import { AuthContext } from \"../../components/Auth/Auth\";\r\nimport { Form, Alert } from \"react-bootstrap\";\r\n\r\n// Components\r\nimport GeneralInfo from \"../../components/AdManager/CreateAd/GeneralInfo/GeneralInfo\";\r\nimport Audience from \"../../components/AdManager/CreateAd/Audience/Audience\";\r\nimport AdPlacement from \"../../components/AdManager/CreateAd/AdPlacement/AdPlacement\";\r\nimport BudgetAndSchedule from \"../../components/AdManager/CreateAd/BudgetAndSchedule/BudgetAndSchedule\";\r\nimport Subscription from \"../../components/AdManager/CreateAd/Subscription/Subscription\";\r\nimport Checkout from \"../../components/AdManager/CreateAd/Checkout/Checkout\";\r\n\r\n//Stepper\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../../store/actions/actionTypes\";\r\n\r\nclass CreateAdForm extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.headingRef = React.createRef();\r\n      }\r\n\r\n\r\n  static contextType = AuthContext;\r\n\r\n  state = {\r\n    activeStep: 0,\r\n  };\r\n\r\n  // Stepper\r\n  getSteps() {\r\n    return [\r\n      \"General ad information\",\r\n      \"Audience\",\r\n      \"Design and placements\",\r\n      \"Budget and schedule\",\r\n      \"Subscription plan\",\r\n    ];\r\n  }\r\n\r\n  getStepContent(stepIndex) {\r\n    const activeStep = this.state.activeStep;\r\n\r\n    switch (stepIndex) {\r\n      case 0:\r\n        return (\r\n          <GeneralInfo\r\n            goToAdManager={() => this.goToAdManager()}\r\n            goToAudience={() => this.goToAudience(activeStep)}\r\n            headingRef={this.headingRef}\r\n          />\r\n        );\r\n      case 1:\r\n        return (\r\n          <Audience\r\n            handleBack={() => this.handleBack(activeStep)}\r\n            goToAdPlacements={() => this.goToAdPlacements(activeStep)}\r\n            headingRef={this.headingRef}\r\n          />\r\n        );\r\n\r\n      case 2:\r\n        return (\r\n          <AdPlacement\r\n            handleBack={() => this.handleBack(activeStep)}\r\n            goToBudgetAndSchedule={() => this.goToBudgetAndSchedule(activeStep)}\r\n            headingRef={this.headingRef}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <BudgetAndSchedule\r\n            handleBack={() => this.handleBack(activeStep)}\r\n            goToSubscriptionPlans={() => this.goToSubscriptionPlans(activeStep)}\r\n            headingRef={this.headingRef}\r\n          />\r\n        );\r\n      case 4:\r\n        return (\r\n          <Subscription\r\n            handleBack={() => this.handleBack(activeStep)}\r\n            goToCheckout={() => this.goToCheckout(activeStep)}\r\n            headingRef={this.headingRef}\r\n          />\r\n        );\r\n      default:\r\n        return \"Unknown stepIndex\";\r\n    }\r\n  }\r\n\r\n  goToAdManager = () => {\r\n      this.props.history.push('/ad-manager')\r\n  }\r\n\r\n  goToAudience = (activeStep) => {\r\n    const nextStep = activeStep + 1;\r\n\r\n    this.setState({\r\n      activeStep: nextStep,\r\n      showErrors: false,\r\n    });\r\n  };\r\n\r\n  goToAdPlacements = (activeStep) => {\r\n    const nextStep = activeStep + 1;\r\n\r\n    this.setState({\r\n      activeStep: nextStep,\r\n      showErrors: false,\r\n    });\r\n  };\r\n\r\n  goToBudgetAndSchedule = (activeStep) => {\r\n    const nextStep = activeStep + 1;\r\n\r\n    this.setState({\r\n      activeStep: nextStep,\r\n      showErrors: false,\r\n    });\r\n  };\r\n\r\n  goToSubscriptionPlans = (activeStep) => {\r\n    const nextStep = activeStep + 1;\r\n\r\n    this.setState({\r\n      activeStep: nextStep,\r\n      showErrors: false,\r\n    });\r\n  };\r\n\r\n  goToCheckout = (activeStep) => {\r\n    const nextStep = activeStep + 1;\r\n\r\n    const { currentUser } = this.context;\r\n\r\n    let orderData = {\r\n      ...this.props.state,\r\n      orderStatus: \"Uncompleted\",\r\n    };\r\n\r\n    db.ref(\r\n      \"users/\" + currentUser.uid + \"/campaigns/\" + `/${this.props.adInfo.name}`\r\n    ).set(orderData);\r\n\r\n    this.setState({\r\n      activeStep: nextStep,\r\n      showErrors: false,\r\n    });\r\n  };\r\n\r\n  handleBack = (activeStep) => {\r\n    const prevStep = activeStep - 1;\r\n\r\n    this.setState({\r\n      activeStep: prevStep,\r\n    });\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState({\r\n      activeStep: 0,\r\n    });\r\n  };\r\n\r\n  // selectStep = (label) => {\r\n  //     const steps = this.getSteps();\r\n\r\n  //     const idxSelectedStep = steps.indexOf(label);\r\n\r\n  //     console.log(label);\r\n\r\n  //     this.setState({\r\n  //         activeStep: idxSelectedStep\r\n  //     })\r\n  // };\r\n\r\n  render() {\r\n    // Stepper\r\n    const activeStep = this.state.activeStep;\r\n    const steps = this.getSteps();\r\n\r\n    return (\r\n      <div class=\"manager\">\r\n        <div className=\"manager-jumbotron d-md-flex justify-content-between\">\r\n          <h1\r\n            ref={this.headingRef}\r\n            className=\"manager-jumbotron-title dark-purple-font\"\r\n          >\r\n            Create new campaign\r\n          </h1>\r\n        </div>\r\n        <div className=\"manager-ad-form\">\r\n          <div className=\"manager-ad-form-row\">\r\n            <div className=\"ad-container\">\r\n              <Stepper\r\n                className=\"ad-stepper\"\r\n                activeStep={this.state.activeStep}\r\n                alternativeLabel\r\n              >\r\n                {steps.map((label) => (\r\n                  <Step className=\"ad-step\" key={label}>\r\n                    <StepLabel className=\"ad-step-label\">{label}</StepLabel>\r\n                  </Step>\r\n                ))}\r\n              </Stepper>\r\n\r\n              {activeStep === steps.length ? (\r\n                <div>\r\n                  <Checkout\r\n                    handleBack={() => this.handleBack(activeStep)}\r\n                    headingRef={this.headingRef}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <Form className=\"add-form\">\r\n                    {this.getStepContent(activeStep)}\r\n                  </Form>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    adInfo: state.adInfo,\r\n    audience: state.audience,\r\n    state: { ...state },\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateAdForm);\r\n","D:\\Code\\AdWeDo\\src\\components\\Home\\SubscriptionPlans\\SubscriptionPlans.js",[],"D:\\Code\\AdWeDo\\src\\components\\Profile\\UserAds.js",["255"],"import React, { useContext } from \"react\";\r\nimport { withRouter } from 'react-router';\r\n\r\n// import { AuthContext } from \"../Auth/Auth\";\r\n\r\nconst UserAds = (props) => {\r\n  // const {currentUser} = useContext(AuthContext);\r\n\r\n  let ads = null;\r\n  ads = (\r\n    <div className=\"ads-profile-content col-md-12 text-center\">\r\n      <div className=\"ads-profile-content-noads\">\r\n        <h4>You don't have any ads</h4>\r\n        <button onClick={() => props.history.push('/ad-manager')} className=\"btn ads-add-button btn-lg mt-3\">Create new ad campaign</button>\r\n      </div>\r\n    </div> \r\n    );\r\n\r\n    console.log(\"history\", props.history)\r\n  return (\r\n    <div className=\"Ads-profile m-none\">\r\n      <h1 className=\"text-center purple\">My ads</h1>\r\n      <div className=\"ads-profile-container mt-4\">\r\n        {ads}\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default withRouter(UserAds);","D:\\Code\\AdWeDo\\src\\components\\Home\\SubscriptionPlans\\SubscriptionCard.js",[],"D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\AdPlacement\\AdPlacement.js",["256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271"],"import React,{ useState, useEffect } from 'react';\r\nimport { \r\n    DevicesSelect} from './PlacementSelectForms';\r\nimport { Form, Alert, Button } from 'react-bootstrap';\r\nimport FacebookPlacements from './FacebookPlacements/FacebookPlacements';\r\nimport GoogleAdForm from './GoogleAd/GoogleAdForm';\r\nimport { connect } from 'react-redux'\r\nimport * as actionTypes from '../../../../store/actions/actionTypes'\r\n\r\n// import Select from 'react-select'\r\n// import makeAnimated from 'react-select/animated';\r\n\r\n\r\nconst AdPlacement = (props) => {\r\n    const [showFbPlacements, setShowFbPlacements] = useState(false)\r\n    const [showInstaPlacements, setShowInstaPlacements] = useState(false)\r\n    const [showGooglePlacements, setShowGooglePlacements] = useState(false)\r\n\r\n    // Production\r\n    // const [isFbFormSaved, setIsFbFormSaved] = useState(false)\r\n    // const [isGglFormSaved, setIsGglFormSaved] = useState(false)\r\n\r\n    // Development\r\n    const [isFbFormSaved, setIsFbFormSaved] = useState(true)\r\n    const [isGglFormSaved, setIsGglFormSaved] = useState(true)\r\n\r\n    // Production\r\n    // const [errors, setErrors] = useState({\r\n    //     url: \"URL is invalid. Check if you have 'https' or 'http' in your URL.\",\r\n    //     devices: \"You must select at least 1 type of device\",\r\n    //     headline: \"You have to fill this field\",\r\n    //     description: \"You have to fill this field\",\r\n    //     headlineOneGgl: \"You have to fill this field\",\r\n    //     headlineTwoGgl: \"You have to fill this field\",\r\n    //     headlineThreeGgl: \"You have to fill this field\",\r\n    //     descriptionGgl: \"You have to fill this field\"\r\n    // })\r\n\r\n    // Development\r\n    const [errors, setErrors] = useState({\r\n        url: \"\",\r\n        devices: \"\",\r\n        headline: \"\",\r\n        description: \"\",\r\n        headlineOneGgl: \"\",\r\n        headlineTwoGgl: \"\",\r\n        headlineThreeGgl: \"\",\r\n        descriptionGgl: \"\"\r\n    })\r\n\r\n    const [showErrors, setShowErrors] = useState(false)\r\n\r\n    const runOnPlatforms = [...props.adInfo.runOn]\r\n\r\n    // Initial render\r\n    useEffect(() => {\r\n        // Scroll to the top of the form \r\n        props.headingRef.current.scrollIntoView();\r\n\r\n        // Show placements form for platforms chosen by the customer\r\n        if(runOnPlatforms.includes(\"runOnFacebook\")){\r\n            setShowFbPlacements(true)\r\n        }\r\n\r\n        if(runOnPlatforms.includes(\"runOnInstagram\")){\r\n            setShowInstaPlacements(true)\r\n        }\r\n\r\n        if(runOnPlatforms.includes(\"runOnGoogle\")){\r\n            setShowGooglePlacements(true)\r\n        }\r\n        \r\n\r\n    }, [])\r\n\r\n    const validateDevices = devicesData => {\r\n        \r\n        let devices = []\r\n\r\n        // Handle validation\r\n        if(devicesData != null){\r\n\r\n            devices = devicesData.map( device => {\r\n                return device.value\r\n            })\r\n\r\n            setErrors({\r\n                ...errors,\r\n                devices: \"\"\r\n            })\r\n        }else{\r\n            setErrors({\r\n                ...errors,\r\n                devices: \"You must select at least 1 type of devices\"\r\n            })\r\n        }\r\n\r\n        props.saveDevices(devices)\r\n        \r\n    }\r\n\r\n    // URL\r\n    const saveUrl = e => {\r\n        const url = e.target.value\r\n\r\n        let isValid = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/.test(url)\r\n\r\n        if(isValid){\r\n            setErrors({\r\n                ...errors,\r\n                url: \"\"\r\n            })\r\n        }else{\r\n            setErrors({\r\n                ...errors,\r\n                url: \"URL is invalid. Check if you have 'https' or 'http' in your URL.\"\r\n            })\r\n        }\r\n\r\n        props.saveUrl(url)\r\n    }\r\n    \r\n\r\n    const changeGglForm = () => {\r\n        setIsGglFormSaved(false)\r\n    }\r\n\r\n    const saveGooglePlacements = (e, details) => {\r\n        e.preventDefault()\r\n\r\n        // Validation\r\n        let errorsGoogle = {...errors}\r\n\r\n        // Set errors if fields are not filled\r\n        errorsGoogle.headlineOneGgl = details.headlineOne.length > 0 ? \"\" :  \"You have to fill this field\"\r\n        errorsGoogle.headlineTwoGgl = details.headlineTwo.length > 0 ? \"\" :  \"You have to fill this field\"\r\n        errorsGoogle.headlineThreeGgl = details.headlineThree.length > 0 ? \"\" :  \"You have to fill this field\"\r\n        errorsGoogle.descriptionGgl = details.description.length > 0 ? \"\" :  \"You have to fill this field\"\r\n\r\n        if(errorsGoogle.headlineOneGgl != \"\" ||  errorsGoogle.headlineTwoGgl != \"\" ||  errorsGoogle.headlineThreeGgl != \"\" ||  errorsGoogle.descriptionGgl != \"\" ){\r\n            setShowErrors(true)\r\n            setIsGglFormSaved(false)\r\n        }else{\r\n            setIsGglFormSaved(true)\r\n        }\r\n\r\n        \r\n\r\n        setErrors(errorsGoogle)\r\n        props.saveGoogleDetails(details)\r\n    }\r\n\r\n    // Validate form and go to budget and schedule form\r\n    const goToBudgetAndSchedule = () => {\r\n        if(errors.devices != \"\" || errors.url != \"\"){\r\n            setShowErrors(true)\r\n        }else{\r\n            \r\n            props.goToBudgetAndSchedule()\r\n        }\r\n\r\n        \r\n    }\r\n\r\n\r\n    let devicesAlert = null\r\n    if(errors.devices != \"\" && showErrors){\r\n        devicesAlert = (\r\n            <Alert className=\"alert-danger my-0\" variant='danger'>\r\n                {errors.devices}\r\n            </Alert>\r\n        )\r\n    }\r\n\r\n    let urlAlert = null\r\n    if(errors.url != \"\" && showErrors){\r\n        urlAlert = (\r\n            <Alert className=\"alert-danger\" variant='danger'>\r\n                {errors.url}\r\n            </Alert>\r\n        )\r\n    }\r\n\r\n    let isNextDisabled = true;\r\n\r\n    // Checks if all social platforms are used in the form\r\n    if(showFbPlacements && showGooglePlacements){\r\n        if(isFbFormSaved && isGglFormSaved && errors.devices == \"\" && errors.url == \"\"){\r\n            isNextDisabled = false\r\n        }\r\n    }else if(showFbPlacements && errors.devices == \"\" && errors.url == \"\"){\r\n        if(isFbFormSaved){\r\n            isNextDisabled = false\r\n        }\r\n    }else if(showGooglePlacements && errors.devices == \"\" && errors.url == \"\"){\r\n        if(isGglFormSaved){\r\n            isNextDisabled = false\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"add-form-group\">\r\n            <h3 className=\"border-bottom add-form-label\">Choose where your ads will appear</h3>\r\n            <form className=\"placement-form\">\r\n                <div className=\"row devices-field\">\r\n                    <div className=\"col-md-7 \">\r\n                        {/* <i class=\"fas fa-globe-europe\"></i> */}\r\n                        <label className=\"dark-gray h4\" >Devices, OS: </label>\r\n                        <DevicesSelect selectedDevices={props.adInfo.devices} saveDevices={devices => validateDevices(devices)}/>\r\n                    </div>\r\n                    <div className=\"col-md-5 alert-devices\">\r\n                       {devicesAlert}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row url-field\">\r\n                    <div className=\"fb-ad-form-field col-md-7\">\r\n                        <label className=\"dark-gray h4\" >Website URL</label>\r\n                        \r\n                        <Form.Control name=\"url\" value={props.adInfo.url} onChange={(e) => saveUrl(e)} type=\"text\" placeholder=\"Enter your website URL\" />\r\n                    </div>\r\n                    <div className=\"fb-ad-form-field col-md-5\">\r\n                        {urlAlert}\r\n                    </div>\r\n                </div>\r\n                <div className=\"ad-form-row\">  \r\n                    {(showFbPlacements || showInstaPlacements) ? \r\n                        <FacebookPlacements \r\n                        // saveFbPlacements={(e) => saveFbPlacements(e)}\r\n                        setIsFbFormSaved={(trueOrFalse) => setIsFbFormSaved(trueOrFalse)}\r\n                        isFormSaved={isFbFormSaved}\r\n                        showErrors={showErrors}\r\n                        setShowErrors={trueOrFalse => setShowErrors(trueOrFalse)}\r\n                        \r\n                        \r\n                        /> \r\n                    : null}\r\n                    {showGooglePlacements ? \r\n                        <GoogleAdForm \r\n                        saveGooglePlacements={(e, gglPlacements) => saveGooglePlacements(e, gglPlacements)}\r\n                        changeGglForm={changeGglForm}\r\n                        selectedDetails={props.adInfo.googleAd}\r\n                        url={props.adInfo.url}\r\n                        isFormSaved={isGglFormSaved}\r\n                        // For alerts\r\n                        showErrors={showErrors}\r\n                        headlineOneError={errors.headlineOneGgl}\r\n                        headlineTwoError={errors.headlineTwoGgl}\r\n                        headlineThreeError={errors.headlineThreeGgl}\r\n                        descriptionError={errors.descriptionGgl}\r\n                        />\r\n                    : null}\r\n                    \r\n                   \r\n                </div>\r\n            </form>\r\n            <div className=\"d-flex justify-content-end\">\r\n                <button\r\n                    onClick={() => props.handleBack()}\r\n                    className=\"btn btn-back\"\r\n                >\r\n                Back\r\n                </button>\r\n                <Button variant=\"contained\" disabled={isNextDisabled} className=\"btn btn-continue\" onClick={() => goToBudgetAndSchedule()}>\r\n                    Continue\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{ \r\n        adInfo: state.adInfo\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        saveDevices: (devices) => dispatch({type: actionTypes.SAVE_DEVICES, devices: devices}),\r\n        saveUrl: (url) => dispatch({type: actionTypes.SAVE_URL, url: url}),\r\n        saveGoogleDetails: details => dispatch({type: actionTypes.SAVE_GOOGLE_DETAILS, details: details}),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdPlacement);","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\Audience\\Audience.js",["272","273","274","275","276","277","278","279","280","281"],"D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\GeneralInfo\\GeneralInfo.js",["282","283","284","285","286","287"],"import React,{ useState, useEffect, useRef } from 'react';\r\nimport { Form, Alert, Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux'\r\nimport * as actionTypes from '../../../../store/actions/actionTypes'\r\n\r\nimport SocialPlatforms from '../SocialPlatforms/SocialPlatforms';\r\nimport MarketingGoal from '../MarketingGoal/MarketingGoal'\r\n\r\n\r\n\r\nconst GeneralInfo = (props) => {\r\n\r\n    // Initial render\r\n    useEffect(() => {\r\n        // Scroll to the top of the form \r\n        // props.headingRef.current.scrollIntoView();\r\n        \r\n        // Scroll to the top of the page\r\n        window.scrollTo(0, 0);\r\n    }, [])\r\n\r\n    const [showErrors, setShowErrors] = useState(false)\r\n   \r\n    // Development\r\n    const [errors, setErrors] = useState({\r\n        name: \"\",\r\n        socialPlatforms: \"\",\r\n        marketingGoal: \"\",\r\n    })\r\n\r\n    // Production\r\n    // const [errors, setErrors] = useState({\r\n    //     name: \"Name should be at least 2 symbols.\" ,\r\n    //     socialPlatforms: \"You have to select at least 1 social media platform to continue.\",\r\n    //     marketingGoal: \"You have to select a marketing goal for your campaign.\",\r\n    // })\r\n\r\n    const changeAdInfo = (e) => {\r\n        // Update Redux state\r\n        props.setName(e)\r\n\r\n        // Copy state \r\n        let newErrors = {...errors}\r\n\r\n        // Validation\r\n        const value = e.target.value\r\n\r\n        if(value.length < 2){\r\n            newErrors.name = \"Name should be at least 2 symbols.\"\r\n        }else{\r\n            newErrors.name = \"\"\r\n        }\r\n\r\n        // Set error message if needed\r\n        setErrors(newErrors)\r\n    }\r\n\r\n    // Social Media Platforms\r\n    const changeSMPInfo = e => {\r\n        // console.log(e.target.checked)\r\n        const checked = e.target.checked\r\n        const platforms = [...props.adInfo.runOn]\r\n        \r\n        // Copy state \r\n        let newErrors = {...errors}\r\n\r\n        if(checked){\r\n            // Add social platform to the array\r\n            platforms.push(e.target.name);\r\n\r\n            // Save to redux state\r\n            props.saveRunOnPlatforms(platforms)\r\n            \r\n            // Set errors\r\n            newErrors.socialPlatforms = \"\"\r\n            setErrors(newErrors)\r\n\r\n        }else{\r\n            // Remove social platform from the array\r\n            for(let i =0; i < platforms.length; i++){\r\n                if(platforms[i] === e.target.name){\r\n                    platforms.splice(i, 1)\r\n                }\r\n            }\r\n\r\n            let socialPlatformsError = ''\r\n            if(platforms.length == 0){\r\n                socialPlatformsError = \"You have to select at least 1 social media platform to continue.\"\r\n            }\r\n\r\n            // Save to redux state\r\n            props.saveRunOnPlatforms(platforms)\r\n\r\n            // Set errors\r\n            newErrors.socialPlatforms = socialPlatformsError\r\n            setErrors(newErrors)\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    const selectMarketingGoal = (goal) => {\r\n        // Copy errors state \r\n        let newErrors = {...errors}\r\n\r\n        if(goal != null){\r\n           // Set errors\r\n           newErrors.marketingGoal = \"\"\r\n           setErrors(newErrors)\r\n        }\r\n\r\n        props.saveMarketingGoal(goal)\r\n\r\n    }\r\n\r\n    const goToAudience = (e) => {\r\n        e.preventDefault()\r\n\r\n        // Display errors if any\r\n        if(errors.name != \"\" ||  errors.socialPlatforms != \"\" ||  errors.marketingGoal != \"\"){\r\n            setShowErrors(true)\r\n        }else {\r\n            // Continue to next page\r\n            setShowErrors(false)\r\n            props.goToAudience()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    // Alerts\r\n    const nameAlert = (\r\n        <Alert className=\"alert-danger\" variant='danger'>\r\n            {errors.name}\r\n        </Alert>\r\n    )\r\n\r\n    const socialPlatformsAlert = (\r\n        <Alert className=\"alert-danger\" variant='danger'>\r\n            {errors.socialPlatforms}\r\n        </Alert>\r\n    )\r\n\r\n    const marketingGoalAlert = (\r\n        <Alert className=\"alert-danger\" variant='danger'>\r\n            {errors.marketingGoal}\r\n        </Alert>\r\n    )\r\n\r\n    \r\n\r\n\r\n    return(\r\n        <div>\r\n            <form onSubmit={(e) => goToAudience(e)}>\r\n                <Form.Group className=\"add-form-group text-center\" controlId=\"formGroupEmail\">\r\n                    <h3 className=\"add-form-label\">Name your ad campaign</h3>\r\n\r\n                    {showErrors &&  errors.name ? nameAlert : null}\r\n                    <Form.Control className=\"add-form-input-name\" name=\"name\" value={props.adInfo.name} onChange={(e) => changeAdInfo(e)} type=\"text\" size=\"lg\" placeholder=\"Enter name\" />\r\n                </Form.Group>\r\n\r\n                {showErrors &&  errors.socialPlatforms ? socialPlatformsAlert : null}\r\n                <SocialPlatforms changeSMPInfo={(e) => changeSMPInfo(e)} platforms={props.adInfo.runOn}/>\r\n    \r\n                {showErrors && errors.marketingGoal ? marketingGoalAlert : null}\r\n                <MarketingGoal selectGoal={selectMarketingGoal} goal={props.adInfo.marketingGoal}/>\r\n\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <button\r\n                        onClick={() => props.goToAdManager()}\r\n                        className=\"btn btn-back\"\r\n                    >\r\n                    Back\r\n                    </button>\r\n                    <button type=\"submit\"  className=\"btn btn-continue\" >\r\n                        Continue\r\n                    </button>\r\n                </div>\r\n        \r\n\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{ \r\n        adInfo: state.adInfo\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setName : (e) => dispatch({type: actionTypes.SET_NAME, name: e.target.value}),\r\n        saveRunOnPlatforms: platforms => dispatch({ type: actionTypes.SAVE_RUNON_PLATFORMS, platforms: platforms}),\r\n        saveMarketingGoal : (goal) => dispatch({type: actionTypes.SAVE_MARKETING_GOAL, goal: goal}),\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GeneralInfo);","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\Checkout\\Checkout.js",["288","289","290","291","292","293","294","295","296","297","298","299"],"import React, { useState, useEffect} from 'react';\r\nimport { Button } from \"react-bootstrap\";\r\nimport CheckoutBox from './CheckoutBox';\r\nimport AdViewFb from '../AdPlacement/FacebookPlacements/AdViewFb';\r\nimport AdViewGoogle from '../AdPlacement/GoogleAd/AdViewGoogle'\r\nimport FbAdViewModal from './FbAdViewModal';\r\nimport SubscriptionPlanInfo from './SubscriptionPlanInfo'\r\n\r\n// DayJS    \r\nimport dayjs from 'dayjs';\r\n\r\n// Icons\r\nimport facebookAds from '../../../../assets/facebookIcon.png';\r\nimport instagramAds from '../../../../assets/instagramIcon.png';\r\nimport googleAds from '../../../../assets/googleIcon.png';\r\n\r\nimport NumberCircle from '../../../../shared/NumberCircle';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from '../../../../store/actions/actionTypes';\r\n\r\nconst Checkout = (props) => {\r\n\r\n    // Initial render\r\n    useEffect(() => {\r\n        // Scroll to the top of the form \r\n        props.headingRef.current.scrollIntoView();\r\n    }, [])\r\n\r\n    // Facebook and Instagram ad view modal\r\n    const [fbModalShow, setFbModalShow] = useState(false);\r\n\r\n    const runOnPlatform = [...props.adInfo.runOn];\r\n\r\n    // Array with images\r\n    let runOnPlatformsIcons = [];\r\n\r\n    if(runOnPlatform.includes(\"runOnFacebook\")){\r\n        runOnPlatformsIcons.push(facebookAds);\r\n    }\r\n\r\n    if(runOnPlatform.includes(\"runOnInstagram\")){\r\n        runOnPlatformsIcons.push(instagramAds);\r\n    }\r\n\r\n    if(runOnPlatform.includes(\"runOnGoogle\")){\r\n        runOnPlatformsIcons.push(googleAds);\r\n    }\r\n\r\n    let adInfo = props.adInfo;\r\n    let audience = props.audience;\r\n\r\n    let selectedPlacements = {...adInfo.facebookAd.placements};\r\n    // Array for storing only the chosen placements\r\n    let placementsToShow = [];\r\n    const lastPlacement = selectedPlacements.custom[selectedPlacements.custom.length - 1];\r\n\r\n    if(selectedPlacements.automatic){\r\n        // Add only 1 value if placements are automatic\r\n        placementsToShow.push(\"Automatic\");\r\n    } else {\r\n        // Add all placements names\r\n        selectedPlacements.custom.map(placement => {\r\n            if(placement.checked){\r\n                // Push labels to be displayed\r\n                switch(placement.name){\r\n                    case \"newsFeed\":\r\n                        placementsToShow.push(\"News feed\");\r\n                        break;\r\n                    case \"marketplace\":\r\n                        placementsToShow.push(\"Marketplace\");\r\n                        break;\r\n                    case \"videoFeeds\":\r\n                        placementsToShow.push(\"Video Feeds\");\r\n                        break;\r\n                    case \"rightColumn\":\r\n                        placementsToShow.push(\"Right Column\");\r\n                        break;\r\n                    case \"stories\":\r\n                        placementsToShow.push(\"Stories\");\r\n                        break;\r\n                }\r\n               \r\n            }\r\n        })\r\n    }\r\n\r\n  \r\n    // Schedule Redux state to variable\r\n    let schedule = {...props.adInfo.budgetAndSchedule.schedule};\r\n    let isCustom = false;\r\n    let scheduleInfo = <div></div>;\r\n\r\n\r\n    if(schedule.asapSchedule){\r\n        // Display message\r\n        scheduleInfo = (\r\n            <div className=\"row\">\r\n                <div className=\"col-3 \"> \r\n                    <p className=\"key\">Schedule: </p>\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <p className=\"value\">Run as soon as possible</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }else if(schedule.customSchedule){\r\n        // Set isCustom to true and display dates\r\n        isCustom = true;\r\n\r\n        // Format dates from redux state\r\n        const formattedStartDate = dayjs(schedule.startDate).format('DD-MM-YYYY');\r\n        const formattedEndDate = dayjs(schedule.endDate).format('DD-MM-YYYY');\r\n\r\n        scheduleInfo = (\r\n            \r\n            <div className=\"row\">\r\n                <div className=\"col-3\"> \r\n                    <p className=\" key\">Schedule: </p>\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <p className=\"value\"><span className=\"key\">From: </span>{formattedStartDate}</p>\r\n                    <p className=\"value\"><span className=\"key\">To: </span> {formattedEndDate}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n    // Budget Redux state to variable\r\n    let budget = {...props.adInfo.budgetAndSchedule.budget};\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h3 className=\"border-bottom add-form-label\">Checkout</h3>\r\n            <div className=\"row\">\r\n                {/* General Info */}\r\n                <div className=\"col-md-6\">\r\n                    <CheckoutBox>\r\n                        <h3 className=\"checkout-box-heading\"><NumberCircle number=\"1\"/> General info</h3>\r\n                        <div className=\"checkout-box-info-container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-5 key\">\r\n                                    <p className=\"key\">Campaign name: </p>\r\n                                </div>\r\n                                <div className=\"col-7  value\">\r\n                                    <p>{adInfo.name}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-5 key\">\r\n                                    <p className=\"key\">Social platforms: </p>\r\n                                </div>\r\n                                <div className=\"col-7 value\">\r\n                                    <p>{runOnPlatformsIcons.map(icon => {\r\n                                        return <img className=\"smpIcon\" src={icon} key={icon} alt=\"social media icon\"/>\r\n                                    })}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-5 key\">\r\n                                    <p className=\"key\">Marketing goal: </p>\r\n                                </div>\r\n                                <div className=\"col-7 value\">\r\n                                    <p>{adInfo.marketingGoal}</p>\r\n                                </div>\r\n                            </div>\r\n                           \r\n                            \r\n                           \r\n                        </div>\r\n                    </CheckoutBox>\r\n                </div>\r\n                {/* Audience */}\r\n                <div className=\"col-md-6\">\r\n                    <CheckoutBox>\r\n                        <h3 className=\"checkout-box-heading\"><NumberCircle number=\"2\"/> Audience</h3>\r\n                        <div className=\"checkout-box-audience-container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">\r\n                                    <p className=\"key\">Locations: </p>\r\n                                </div>\r\n                                <div className=\"col-9 \">\r\n                                    <p>\r\n                                        {audience.location.map(location =>{\r\n                                            if(location == audience.location[audience.location.length - 1]){\r\n                                                return location.name;\r\n                                            }else{\r\n                                                return location.name + \"; \";\r\n                                            }\r\n                                       \r\n                                        })}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">\r\n                                    <p className=\"key\">Gender: </p>\r\n                                </div>\r\n                                <div className=\"col-9\">\r\n                                    <p>{audience.gender != null ? audience.gender.label : \"All\"}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">\r\n                                    <p className=\"key\">Age from: </p>\r\n                                </div>\r\n                                <div className=\"col-9\">\r\n                                    <p>{audience.ageFrom}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">\r\n                                    <p className=\"key\">Age to: </p>\r\n                                </div>\r\n                                <div className=\"col-9\">\r\n                                    <p>{audience.ageTo}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">\r\n                                    <p className=\"key\">Interests: </p>\r\n                                </div>\r\n                                <div className=\"col-9\">\r\n\r\n                                    <p>\r\n                                    {audience.interests.map(interest =>{\r\n                                        if(interest == audience.interests[audience.interests.length - 1]){\r\n                                            return interest.label;\r\n                                        }else{\r\n                                            return interest.label + \", \";\r\n                                        }\r\n\r\n                                       \r\n                                    })}\r\n                                    </p>\r\n\r\n                                </div>\r\n                            </div>\r\n                           \r\n                            \r\n                           \r\n                        </div>\r\n                    </CheckoutBox>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <CheckoutBox>\r\n                    <h3 className=\"checkout-box-heading\"><NumberCircle number=\"3\"/> Placements and design</h3>\r\n                        <div className=\" checkout-box-placements-container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">\r\n                                    <p className=\"key\">Devices: </p>\r\n                                </div>\r\n                                <div className=\"col-9 \">\r\n                                    <p>\r\n                                    {adInfo.devices.map(device =>{\r\n                                        if(device == adInfo.devices[adInfo.devices.length - 1]){\r\n                                            return device;\r\n                                        }else{\r\n                                            return device + \", \";\r\n                                        }\r\n                                    })}\r\n                                    </p>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">\r\n                                    <p className=\"key\">Website url: </p>\r\n                                </div>\r\n                                <div className=\"col-9 \">\r\n                                    <p><a href={adInfo.url} target=\"_blank\">{adInfo.url}</a></p>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-5 col-md-4\">\r\n                                    <p className=\"key\">Placements: </p>\r\n                                </div>\r\n                                <div className=\"col-7 col-md-8 \">\r\n                                    <p>\r\n                                        {placementsToShow.map(placement =>{\r\n                                            if(placement == placementsToShow[placementsToShow.length - 1]){\r\n                                                return <span key={placement}>{placement}</span>\r\n                                            }else{\r\n                                                return <span key={placement}>{placement}; </span>\r\n                                            }\r\n                                            })\r\n                                        }\r\n                                    </p>\r\n                                    \r\n                                </div>\r\n                                \r\n                            </div>\r\n                            {props.adInfo.runOn.includes(\"runOnGoogle\") ?\r\n                            (<div className=\"row\">\r\n                                <div> \r\n                                    <p className=\"col-12 key\">Google ad view: </p>\r\n                                </div>\r\n                                <div className=\"col-12 \">\r\n                                    <AdViewGoogle \r\n                                    headlineOne={props.googleAd.headlineOne ? props.googleAd.headlineOne : \"Headline 1 |\"}\r\n                                    headlineTwo={props.googleAd.headlineTwo ? props.googleAd.headlineTwo : \"Headline 2 |\"}\r\n                                    headlineThree={props.googleAd.headlineThree ? props.googleAd.headlineThree : \"Headline 3\"}\r\n                                    description={props.googleAd.description ? props.googleAd.description : \"Your description will be shown here\"}\r\n                                    url={props.adInfo.url ? props.adInfo.url : \"yourwebsite.com\"}\r\n                                    />                                  \r\n                                </div>\r\n                            </div>)\r\n                            : null}\r\n\r\n                            {/* Facebook and Instagram */}\r\n                            {props.adInfo.runOn.includes(\"runOnFacebook\") || props.adInfo.runOn.includes(\"runOnInstagram\") ? \r\n                            <div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <p className=\"key\">Facebook ad view:</p>\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#FbAdView\">\r\n                                            View\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <FbAdViewModal\r\n                                    show={fbModalShow}\r\n                                    onHide={() => setFbModalShow(false)}\r\n                                    // Ad view specific\r\n                                    runOnPlatforms={props.adInfo.runOn}\r\n                                    adDetails={props.adDetails}\r\n                                    pictureOrVideoUrl={props.adInfo.facebookAd.pictureOrVideoUrl ? props.adInfo.facebookAd.pictureOrVideoUrl : null}\r\n                                    headline={props.adDetails[0] ? props.adDetails[0].value : null}\r\n                                    description={props.adDetails[1] ? props.adDetails[1].value : null}\r\n                                    url={props.adInfo.url ? props.adInfo.url : null}>\r\n                                </FbAdViewModal>\r\n                            </div>\r\n                            : null}\r\n                        </div>\r\n                        \r\n                    \r\n                    </CheckoutBox>\r\n                </div>\r\n                \r\n                <div className=\"col-md-6\">\r\n                    <CheckoutBox>\r\n                    <h3 className=\"checkout-box-heading\"><NumberCircle number=\"4\"/> Budget and schedule</h3>\r\n                        <div className=\" checkout-box-budget-container\">\r\n\r\n                        <div className=\"row\">\r\n                                {/* <div className=\"col-3\">\r\n                                    <p className=\"key\">Budget:</p>\r\n                                </div> */}\r\n                                <div className=\"col-12 budget-table-container\">\r\n                                    <table className=\"budget-table\" data-toggle=\"table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Platform</th>\r\n                                                <th>Daily</th>\r\n                                                <th>Monthly</th>\r\n                                                <th>Lifetime</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {props.adInfo.runOn.includes(\"runOnFacebook\") ? \r\n                                            <tr>\r\n                                                <td>Facebook</td>\r\n                                                <td>${budget.fbDailyBudget}</td>\r\n                                                <td>${budget.fbDailyBudget * 30}</td>\r\n                                                <td>${budget.fbLifetimeBudget}</td>\r\n                                            </tr>\r\n                                            : null}\r\n                                            {props.adInfo.runOn.includes(\"runOnGoogle\") ? \r\n                                                <tr>\r\n                                                    <td>Google</td>\r\n                                                    <td>${budget.googleDailyBudget}</td>\r\n                                                    <td>${budget.googleDailyBudget * 30}</td> {/* Calculate monthly budget */}\r\n                                                    <td>$ lifetime</td> {/* Calculate lifetime budget */}\r\n                                                </tr>\r\n                                            \r\n                                            : null}\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                </div>\r\n                            </div> \r\n\r\n\r\n                            {/* Schedule */}\r\n                            {scheduleInfo}\r\n                            \r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">\r\n                                    <p className=\"key\">Period:</p>\r\n                                </div>\r\n                                <div className=\"col-9 \">\r\n                                    <p>{schedule.period}</p>\r\n                                </div>\r\n                                \r\n                            </div> \r\n                        </div>\r\n                       \r\n                    </CheckoutBox>\r\n                </div>\r\n                <div className=\"checkout-subscription col-md-8 offset-md-2\">\r\n                    <CheckoutBox>\r\n                        <h3 className=\"checkout-box-heading\"><NumberCircle number=\"5\"/> Subscription</h3>\r\n                        <div className=\"checkout-box-subscription-container\">\r\n                            <SubscriptionPlanInfo subscriptionPlan={props.subscriptionPlan}/>\r\n                        </div>\r\n                    </CheckoutBox>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"d-flex justify-content-end\">\r\n                <button onClick={() => props.handleBack()} className=\"btn btn-back\" type=\"submit\">\r\n                    Back\r\n                </button>\r\n                <Button variant=\"contained\" className=\"btn btn-continue\">\r\n                    Continue\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        adInfo: state.adInfo,\r\n        audience: state.audience,\r\n        adDetails: state.adInfo.facebookAd.adDetails,\r\n        googleAd: state.adInfo.googleAd,\r\n        subscriptionPlan: state.subscriptionPlan\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        // saveSubscriptionPlan: (plan) => dispatch({type: actionTypes.SAVE_SUBSCRIPTION_PLAN, plan: plan})\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);\r\n","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\BudgetAndSchedule\\BudgetAndSchedule.js",["300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316"],"import React,{ useState, useEffect } from 'react';\r\nimport DatePicker,{addDays} from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport  { Form, Alert, Button } from 'react-bootstrap';\r\n// Redux\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from '../../../../store/actions/actionTypes';\r\n\r\n\r\n// import Globalize from 'globalize';\r\n// import globalizeLocalizer from 'react-widgets-globalize';\r\n\r\nconst BudgetAndSchedule = (props) => {\r\n    // Alert \r\n    const [alertType, setAlertType] = useState('');\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    \r\n    const [showAlerts, setShowAlerts] = useState(false);\r\n    const [scheduleError, setScheduleError] = useState(\"The period for running your ads should be more than 30 days\");\r\n    const [fbBudgetError, setFbBudgetError] = useState(\"Facebook or instagram daily budget is too small\");\r\n    const [googleBudgetError, setGoogleBudgetError] = useState(\"Google daily budget is too small\");\r\n\r\n\r\n    // Budget type\r\n    const [isDailyBudget, setIsDailyBudget] = useState(true);\r\n    const [isLifetimeBudget, setIsLifetimeBudget] = useState(false);\r\n\r\n    // Budget figures\r\n    // Facebook \r\n    const [dailyBudgetFb, setDailyBudgetFb] = useState(1);\r\n    const [lifetimeBudgetFb, setLifetimeBudgetFb] = useState(30);\r\n\r\n    // Google\r\n    const [googleDailyBudget, setGoogleDailyBudget] = useState(1)\r\n    \r\n    const setDailyAndLifetimeBudget = e => {\r\n\r\n        if(e.target.name === \"daily\"){\r\n            // Float value from form\r\n            const dailyBud = parseFloat(e.target.value).toFixed(2);\r\n\r\n            // Integer value from form\r\n            // const dailyBud = e.target.value;\r\n            // dailyBud.toFixed(2);\r\n\r\n            // Checks if dailyBudget > 1 else => shows error\r\n            if(dailyBud > 1){\r\n                // setShowAlert(false)\r\n                setFbBudgetError(\"\")\r\n                setDailyBudgetFb(dailyBud);\r\n            }else{\r\n                // setShowAlert(true)\r\n                // setAlertType(\"DailyBudgetTooSmall\")\r\n                setFbBudgetError(\"Facebook or instagram daily budget is too small\")\r\n                setDailyBudgetFb(dailyBud);\r\n            }\r\n            \r\n            // For float value\r\n            setLifetimeBudgetFb((dailyBud * period).toFixed(2))\r\n\r\n            // For integer value\r\n            // setLifetimeBudgetFb(dailyBud * period);\r\n        }\r\n\r\n\r\n        if(e.target.name === \"lifetime\"){\r\n            const lifetimeBud = parseFloat(e.target.value).toFixed(2);\r\n            console.log(\"lifetimeBud\",lifetimeBud)\r\n\r\n            // Checks if dailyBudget > 1 else => shows error\r\n            if(lifetimeBud / period >= 1){\r\n                // setShowAlert(false);\r\n                setFbBudgetError(\"\");\r\n                const priceDaily = parseFloat(lifetimeBud / period).toFixed(2);\r\n                setDailyBudgetFb(priceDaily);\r\n            }else{\r\n                setFbBudgetError(\"Facebook or instagram daily budget is too small\");\r\n                // setShowAlert(true);\r\n                // setAlertType(\"DailyBudgetTooSmall\");\r\n            }\r\n            setLifetimeBudgetFb(lifetimeBud);\r\n        }\r\n    }\r\n\r\n\r\n    // Schedule type\r\n    const [asapSchedule, setAsapSchedule] = useState(true);\r\n    const [customSchedule, setCustomSchedule] = useState(false);\r\n\r\n    // Schedule dates\r\n    const [startDate, setStartDate] = useState();\r\n\r\n    // Setting 30 days difference between dates\r\n    const endDateMin = new Date();\r\n    endDateMin.setDate(endDateMin.getDate() + 30);\r\n    const [endDate, setEndDate] = useState();\r\n    const [period, setPeriod] = useState(30);\r\n\r\n    // Initial render\r\n    useEffect(() => {\r\n        // Scroll to the top of the form \r\n        props.headingRef.current.scrollIntoView();\r\n        \r\n        // Update form values from redux state \r\n        if(props.adInfo.budgetAndSchedule != null && props.adInfo.budgetAndSchedule != null){\r\n\r\n            let budgetRedux = {...props.adInfo.budgetAndSchedule.budget};\r\n            let scheduleRedux = {...props.adInfo.budgetAndSchedule.schedule};\r\n\r\n            // console.log(\"budgetRedux\", budgetRedux);\r\n            // console.log(\"scheduleRedux\", scheduleRedux);\r\n\r\n            // Update schedule\r\n            if(scheduleRedux.asapSchedule == true || scheduleRedux.asapSchedule != undefined){\r\n                setAsapSchedule(true);\r\n                setCustomSchedule(false);\r\n\r\n            }else if(scheduleRedux.customSchedule == true || scheduleRedux.customSchedule != undefined){\r\n                setAsapSchedule(false);\r\n                setCustomSchedule(true);\r\n\r\n                // Set redux dates to form values\r\n                setStartDate(scheduleRedux.startDate);\r\n                setEndDate(scheduleRedux.endDate);\r\n            }else{\r\n                // Do not update anything\r\n            }\r\n\r\n            // Update budget values for facebook and instagram\r\n            if(budgetRedux.fbDailyBudget != (null || undefined) && budgetRedux.fbLifetimeBudget != (null || undefined)){\r\n                setDailyBudgetFb(budgetRedux.fbDailyBudget);\r\n                setLifetimeBudgetFb(budgetRedux.fbLifetimeBudget);\r\n            }else{\r\n                console.log(\"Facebook budget missing from redux state\");\r\n            }\r\n\r\n            // Update budget values for google\r\n            if(budgetRedux.googleDailyBudget != (null || undefined)){\r\n                setGoogleDailyBudget(budgetRedux.googleDailyBudget);\r\n            }else{\r\n                console.log(\"Google daily budget missing from redux state\");\r\n            }\r\n\r\n\r\n        }else{\r\n            console.log(\"Redux state missing\")\r\n        }\r\n\r\n        \r\n        \r\n    }, [])\r\n\r\n\r\n\r\n    // Values which will trigger a re-render\r\n    const state = [isDailyBudget, isLifetimeBudget, dailyBudgetFb, lifetimeBudgetFb, googleDailyBudget, \r\n        asapSchedule, customSchedule, startDate, endDate, period]\r\n\r\n\r\n    // Update errors everytime user changes some of the values\r\n    useEffect(()=>{\r\n        if(customSchedule){\r\n            const oneDay = 24 * 60 * 60 * 1000;\r\n            const diffDays = Math.round(Math.abs((startDate - endDate) / oneDay));\r\n            setPeriod(diffDays); // Difference between the start and end date\r\n\r\n\r\n            // Update lifetime value for facebook ads when period changes\r\n            if(props.adInfo.runOn.includes(\"runOnFacebook\") || props.adInfo.runOn.includes(\"runOnInstagram\")){\r\n                // Update lifetime budget when changing state\r\n                if(isDailyBudget){\r\n                    setLifetimeBudgetFb((dailyBudgetFb * period).toFixed(2));\r\n                }else if(isLifetimeBudget){\r\n                    // Update daily budget when changing state\r\n                    setDailyBudgetFb((lifetimeBudgetFb / period).toFixed(2));\r\n                }\r\n            }\r\n\r\n\r\n            if(diffDays < 30){\r\n                setScheduleError(\"The period for running your ads should be at least 30 days\")\r\n                // setShowAlert(true)\r\n            }else{\r\n                setScheduleError(\"\");\r\n\r\n                if((lifetimeBudgetFb / diffDays) < 1){\r\n                    setFbBudgetError(\"Facebook or instagram daily budget is too small\");\r\n                    // setShowAlert(true)\r\n                }else{\r\n                    setFbBudgetError(\"\");\r\n                    // setShowAlert(false)\r\n                }\r\n            }\r\n        }\r\n\r\n        if(asapSchedule){\r\n            setPeriod(30)\r\n            setScheduleError(\"\")\r\n\r\n            if(lifetimeBudgetFb < 30){\r\n                // setShowAlert(true)\r\n                setFbBudgetError(\"Facebook or instagram daily budget is too small\")\r\n            }else{\r\n                setFbBudgetError(\"\")\r\n            }\r\n        }\r\n\r\n\r\n        // Set googleBudgetError message\r\n        if(props.adInfo.runOn.includes(\"runOnGoogle\")){\r\n            if(googleDailyBudget >= 1){setGoogleBudgetError(\"\")}\r\n            else{setGoogleBudgetError(\"Google daily budget is too small\")}\r\n        }else{\r\n            setGoogleBudgetError(\"\")\r\n        }\r\n        \r\n\r\n    },[state])\r\n    \r\n    \r\n    // Update lifetime value for facebook ads when period changes\r\n    // useEffect(() => {\r\n    //         // Update lifetime value for facebook ads when period changes\r\n    //         if(props.adInfo.runOn.includes(\"runOnFacebook\") || props.adInfo.runOn.includes(\"runOnInstagram\")){\r\n    //             setLifetimeBudgetFb((dailyBudgetFb * period).toFixed(2));\r\n    //         }\r\n    // }, [startDate, endDate])\r\n\r\n\r\n    const changeToDaily = (e) => {\r\n        if(e.target.checked){\r\n            setIsDailyBudget(true)\r\n            setIsLifetimeBudget(false)\r\n        }\r\n    }\r\n\r\n    const changeToLifetime = (e) => {\r\n        if(e.target.checked){\r\n            setIsDailyBudget(false)\r\n            setIsLifetimeBudget(true)\r\n        }\r\n    }\r\n\r\n    const changeAsapSchedule = (e) => {\r\n        if(e.target.checked){\r\n            setAsapSchedule(true)\r\n            setCustomSchedule(false)\r\n        }\r\n    }\r\n\r\n    const changeCustomSchedule = (e) => {\r\n        if(e.target.checked){\r\n            setAsapSchedule(false)\r\n            setCustomSchedule(true)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const saveData = e => {\r\n        e.preventDefault()\r\n\r\n\r\n        if(scheduleError === \"\" && fbBudgetError === \"\" && googleBudgetError === \"\" ){\r\n            setShowAlerts(false)\r\n            let formData;\r\n\r\n            if(props.adInfo.runOn.includes(\"runOnFacebook\")  || props.adInfo.runOn.includes(\"runOnInstagram\")){\r\n                // Both fb and google ads have been selected\r\n                if(props.adInfo.runOn.includes(\"runOnGoogle\")){\r\n                    formData = {\r\n                        budget: {\r\n                            fbDailyBudget: dailyBudgetFb,\r\n                            fbLifetimeBudget: lifetimeBudgetFb,\r\n                            googleDailyBudget: googleDailyBudget\r\n                        }\r\n                    };\r\n                }else{\r\n                    formData = {\r\n                        budget: {\r\n                            fbDailyBudget: dailyBudgetFb,\r\n                            fbLifetimeBudget: lifetimeBudgetFb,\r\n                        }\r\n                    };\r\n                }\r\n\r\n            }else if(props.adInfo.runOn.includes(\"runOnGoogle\")){\r\n                formData = {\r\n                    budget: {\r\n                        googleDailyBudget: googleDailyBudget\r\n                    }\r\n                };\r\n            }\r\n\r\n            if(asapSchedule){\r\n                formData = {\r\n                    ...formData,\r\n                    schedule: {\r\n                        asapSchedule: asapSchedule,\r\n                        period: `${period} days`\r\n                    }\r\n                }\r\n            }else if(customSchedule){\r\n                formData = {\r\n                    ...formData,\r\n                    schedule: {\r\n                        customSchedule: customSchedule,\r\n                        startDate: startDate,\r\n                        endDate: endDate,\r\n                        period: `${period} days`\r\n                    },\r\n                }\r\n            }\r\n\r\n            props.saveBudgetAndSchedule(formData)\r\n            props.goToSubscriptionPlans()\r\n        }else{\r\n            setShowAlerts(true)\r\n        }\r\n       \r\n    }\r\n    \r\n    let scheduleAlert = null;\r\n    let fbBudgetAlert = null;\r\n    let googleBudgetAlert = null;\r\n\r\n    if(showAlerts){\r\n        if(scheduleError != \"\"){\r\n            scheduleAlert = (\r\n            <Alert variant='danger' >\r\n                {scheduleError}\r\n            </Alert>\r\n            )\r\n        }\r\n        if(fbBudgetError != \"\"){\r\n            fbBudgetAlert = (\r\n            <Alert variant='danger' >\r\n                {fbBudgetError}\r\n            </Alert>\r\n            )\r\n        }\r\n        if(googleBudgetError != \"\"){\r\n            googleBudgetAlert = (\r\n            <Alert variant='danger' >\r\n                {googleBudgetError}\r\n            </Alert>\r\n            )\r\n        }\r\n      \r\n    }\r\n\r\n    // Budget info box\r\n    let budgetInfo;\r\n    budgetInfo = <span><b>{lifetimeBudgetFb}$</b> for the period of {customSchedule ? period + \" days\" : \"30 days\"}  and around <b>{dailyBudgetFb}$</b>/day.</span>\r\n\r\n    let budgetTitleFb = \"\";\r\n    if(props.adInfo.runOn.includes(\"runOnFacebook\") && props.adInfo.runOn.includes(\"runOnInstagram\")){\r\n        budgetTitleFb = \"Facebook & Instagram\"\r\n    }else if(props.adInfo.runOn.includes(\"runOnFacebook\")){\r\n        budgetTitleFb = \"Facebook\"\r\n    }else if(props.adInfo.runOn.includes(\"runOnInstagram\")){\r\n        budgetTitleFb = \"Instagram\"\r\n    }\r\n\r\n    return(\r\n        <div className=\"add-form-group\">\r\n            <h3 className=\"border-bottom add-form-label\">Choose your budget and starting date</h3>\r\n            <form onSubmit={(e) => saveData(e)} className=\"budget-form \">\r\n                <div className=\"col-12\">\r\n                    {scheduleAlert}\r\n                </div>\r\n                <div className=\"budget-form-schedule col-md-6\">\r\n                    <h3 className=\"budget-form-label font-color \">Schedule</h3>\r\n                    <div className=\"asap-schedule-field\">\r\n                        <div>\r\n                        <Form.Check\r\n                            custom\r\n                            block\r\n                            label=\"Run as soon as possible \"\r\n                            type=\"radio\"\r\n                            id=\"asap-schedule\"\r\n                            className=\"radio-schedule\"\r\n                            name=\"Asap schedule\"\r\n                            checked={asapSchedule}\r\n                            onChange={(e) => changeAsapSchedule(e)}\r\n                        />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"custom-schedule-field \">\r\n                        <Form.Check\r\n                            custom\r\n                            block\r\n                            label=\"Custom schedule\"\r\n                            type=\"radio\"\r\n                            id=\"custom-schedule\"\r\n                            className=\"radio-schedule\"\r\n                            name=\"Custom schedule\"\r\n                            checked={customSchedule}\r\n                            onChange={(e) => changeCustomSchedule(e)}\r\n                        />\r\n                        { customSchedule ? \r\n                            <div className=\"\">\r\n                                <Form.Group>\r\n                                <div className=\"start-date d-flex\">\r\n                                    <label className=\"mr-2 my-auto\">Start date:</label>\r\n                                    <DatePicker\r\n                                    selected={startDate}\r\n                                    onChange={(date) => setStartDate(date)}\r\n                                    minDate={new Date()}\r\n                                    dateFormat=\"dd-MM-yyyy\"\r\n                                    className=\"date-picker\"\r\n                                    placeholderText=\"Click to select a date\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"end-date d-flex\">\r\n                                    <label className=\"mr-2 my-auto\">End date:</label>\r\n                                    <DatePicker\r\n                                    selected={endDate}\r\n                                    onChange={(date) => setEndDate(date)}\r\n                                    minDate={endDateMin}\r\n                                    dateFormat=\"dd-MM-yyyy\"\r\n                                    className=\"date-picker\"\r\n                                    placeholderText=\"Click to select a date\"\r\n                                    />\r\n                                </div>\r\n                            </Form.Group>\r\n                            </div> : null}\r\n\r\n                    </div>\r\n            </div>\r\n                <div className=\"budget-form-budget col-md-12\">\r\n                <h3 className=\"budget-form-label font-color\">Budget</h3>\r\n                    {props.adInfo.runOn.includes(\"runOnFacebook\") || props.adInfo.runOn.includes(\"runOnInstagram\") ? \r\n                        <div className=\"fb-budget\">\r\n                        <h4 className=\"font-color mb-4\">{budgetTitleFb}</h4>\r\n                        <div className=\"row fb-budget-box border\">\r\n                            <div className=\"col-12\">\r\n                                {fbBudgetAlert}\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                                <div className=\"daily-budget-field d-flex \">\r\n                                {/* <div className=\"\"> */}\r\n                                    <Form.Check\r\n                                        custom\r\n                                        block\r\n                                        label=\"Daily budget:\"\r\n                                        type=\"radio\"\r\n                                        id={\"daily-budget-radio\"}\r\n                                        className=\"radio-budget\"\r\n                                        name=\"dailyBudget\"\r\n                                        checked={isDailyBudget}\r\n                                        onChange={(e) => changeToDaily(e)}\r\n                                    />\r\n                                {/* </div> */}\r\n                                { isDailyBudget ?  \r\n                                <div className=\"input-group mx-3\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\" id=\"basic-addon1\">USD</span>\r\n                                    </div>\r\n                                    <input type=\"number\" name=\"daily\" value={dailyBudgetFb} onChange={(e) => setDailyAndLifetimeBudget(e)} className=\"form-control\" placeholder=\"Daily budget\" min=\"1.00\" max=\"500\" step=\"1\"/>\r\n                                </div> : null }\r\n                            </div>\r\n                            <div className=\"lifetime-budget-field d-flex\">\r\n                                {/* <div className=\"\">   */}\r\n                                    <Form.Check\r\n                                        custom\r\n                                        block\r\n                                        label=\"Lifetime budget:\"\r\n                                        type=\"radio\"\r\n                                        id={`lifetime-budget-radio`}\r\n                                        className=\"radio-budget\"\r\n                                        name=\"lifetimeBudget\"\r\n                                        checked={isLifetimeBudget}\r\n                                        onChange={(e) => changeToLifetime(e)}\r\n                                    />\r\n                                {/* </div> */}\r\n                                { isLifetimeBudget ?  \r\n                                <div className=\"input-group ml-3\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\" id=\"basic-addon1\">USD</span>\r\n                                    </div>\r\n                                    <input type=\"number\" name=\"lifetime\" value={lifetimeBudgetFb} onChange={(e) => setDailyAndLifetimeBudget(e)} className=\"form-control\" placeholder=\"Lifetime budget\" min=\"30.00\" max=\"2000000\" step=\"1\"/>\r\n                                </div> : null }\r\n                            </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-7\">\r\n                                <div className=\"spending text-center\">\r\n                                    <p className=\"my-0\">You will spend no more than {budgetInfo}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div> : null}\r\n\r\n                    {props.adInfo.runOn.includes(\"runOnGoogle\") ? \r\n                        <div className=\"ggl-budget\">\r\n                            <h4 className=\"font-color mb-4\">Google ads</h4>\r\n                            <div className=\"col-12\">\r\n                                {googleBudgetAlert}\r\n                            </div>\r\n                            <div className=\"row ggl-budget-box border\">\r\n                                <div className=\"col-12 \">\r\n                                    <p>Google ads will run every month unless you specify a time period or stop them in your Ad Manager.</p>\r\n                                </div>\r\n                                <div className=\"col-md-5 d-flex\">\r\n                                    <label >Daily budget:</label>\r\n                                    <div className=\"ggl-budget-field input-group mx-3\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\" id=\"basic-addon1\">USD</span>\r\n                                        </div>\r\n                                        <input type=\"number\" name=\"gglBudget\" value={googleDailyBudget} onChange={(e) => setGoogleDailyBudget(e.target.value)} className=\"form-control\" placeholder=\"Google budget\" min=\"1\" max=\"2000000\" step=\"1\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-7\">\r\n                                    <div className=\"spending text-center\">\r\n                                        <p className=\"my-0\">You will spend no more than <b>{googleDailyBudget * 30}$</b>/month.</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div> : null}\r\n                    \r\n                </div>\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <button\r\n                        onClick={() => props.handleBack()}\r\n                        className=\"btn btn-back\"\r\n                        type=\"submit\"\r\n                    >\r\n                    Back\r\n                    </button>\r\n                    <Button variant=\"contained\" className=\"btn btn-continue\" onClick={(e) => saveData(e)}>\r\n                        Continue\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n          \r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{ \r\n        adInfo: state.adInfo\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        saveBudgetAndSchedule: (data) => dispatch({type: actionTypes.SAVE_BUDGET_AND_SCHEDULE, data: data}),\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BudgetAndSchedule);","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\Subscription\\Subscription.js",["317","318","319","320","321","322","323","324"],"D:\\Code\\AdWeDo\\src\\shared\\NumberCircle.js",[],"D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\Subscription\\SubscriptionFormCard.js",["325","326","327","328"],"import React from 'react';\r\n\r\nconst SubscriptionFormCard = (props) => {\r\n\r\n    let selectButtonDisabled = {\r\n        \"cursor\": \"context-menu\",\r\n    }\r\n\r\n    const selectPlan = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Pass current plan to be saved in Subscription component\r\n        props.selectSubscriptionPlan(props.planName);\r\n    };\r\n\r\n    let activeCardClasses = null ;\r\n    if(props.shownCard == props.planName){\r\n        activeCardClasses = \"show active\";\r\n    } \r\n    else if(props.selectedPlan == \"onlyRunAds\"  && props.shownCard == props.planName){\r\n        activeCardClasses = \"show active\";\r\n    } \r\n    // else if (props.planName == \"Basic\"){\r\n    //     activeCardClasses = \"show active\";\r\n    // }\r\n\r\n    return(\r\n        \r\n                <div className={`tab-pane fade card-body ${activeCardClasses} `} id={`tab${props.planName}`} aria-labelledby={`heading${props.planName}`} data-parent={`#heading${props.planName}`}>\r\n                        <div className=\"row  \">\r\n                            <div className=\"col-md-6 \">                \r\n                                <h3 className=\"h4\">Includes: </h3>\r\n                                <ul className=\"list text-left\"> \r\n                                    {props.listing.map( li =>{\r\n                                        return <li key={li}><i className=\"fas fa-check\"></i> {li}</li>\r\n                                    })}\r\n                                </ul>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-6 position-relative \">\r\n                                <h3 className=\"h4\">Description</h3>\r\n                                <p className=\"description\">{props.desc}</p>\r\n                                <div className=\"col-12 text-center select-btn\">\r\n                                    <button onClick={(e) => selectPlan(e)} disabled={props.selectedPlan === props.planName ? true: false} className=\"btn button\">{props.selectedPlan === props.planName ? \"Selected\" : props.btnText}</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            \r\n                        </div>\r\n                        \r\n\r\n                        \r\n                       \r\n\r\n                </div>\r\n            /* </div> */\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default SubscriptionFormCard;\r\n\r\n\r\n","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\MarketingGoal\\MarketingGoal.js",["329","330"],"import React from 'react';\r\nimport Auxilliary from '../../../../hoc/Auxilliary';\r\nimport { Form } from 'react-bootstrap';\r\nimport GoalCard  from './GoalCard';\r\n\r\n\r\nconst MarketingGoal = (props) => {\r\n    \r\n\r\n    return(\r\n        <div className=\"add-form-group\">\r\n        <h3 className=\"border-bottom add-form-label\">Choose your marketing goal</h3>\r\n        <div className=\"goals  \">\r\n            <h2 className=\"mx-4 font-color\">Awareness</h2>\r\n            <div className=\"row goals-row d-flex justify-content-left \">\r\n                <div className=\"col-md-4\">\r\n                    <GoalCard \r\n                    title=\"Brand awareness\"\r\n                    iconClass=\"fas fa-podcast\"\r\n                    selectGoal={(title) => props.selectGoal(title)}\r\n                    goal={props.goal}/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <GoalCard \r\n                    title=\"Reach\"\r\n                    iconClass=\"fas fa-expand-arrows-alt\"\r\n                    selectGoal={(title) => props.selectGoal(title)}\r\n                    goal={props.goal}/>\r\n                </div>\r\n                \r\n            </div>\r\n            <h2 className=\"mx-4 font-color\">Consideration</h2>\r\n            <div className=\"row goals-row d-flex justify-content-center \">\r\n                <div className=\"col-md-4\">\r\n                    <GoalCard \r\n                    title=\"Traffic\"\r\n                    iconClass=\"fas fa-mouse-pointer\"\r\n                    selectGoal={(title) => props.selectGoal(title)}\r\n                    goal={props.goal}/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <GoalCard \r\n                    title=\"Engagement\"\r\n                    iconClass=\"fas fa-users\"\r\n                    selectGoal={(title) => props.selectGoal(title)}\r\n                    goal={props.goal}/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <GoalCard \r\n                    title=\"Video views\"\r\n                    iconClass=\"fas fa-play-circle\"\r\n                    selectGoal={(title) => props.selectGoal(title)}\r\n                    goal={props.goal}/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <GoalCard \r\n                    title=\"Lead generation\"\r\n                    iconClass=\"fas fa-filter\"\r\n                    selectGoal={(title) => props.selectGoal(title)}\r\n                    goal={props.goal}/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <GoalCard \r\n                    title=\"Messages\"\r\n                    iconClass=\"fas fa-comment-dots\"\r\n                    selectGoal={(title) => props.selectGoal(title)}\r\n                    goal={props.goal}/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <GoalCard \r\n                    title=\"Application installs\"\r\n                    iconClass=\"fas fa-download\"\r\n                    selectGoal={(title) => props.selectGoal(title)}\r\n                    goal={props.goal}/>\r\n                </div>\r\n            </div>\r\n            <h2 className=\"mx-4 font-color\">Conversion</h2>\r\n            <div className=\"row goals-row d-flex justify-content-center \">\r\n                <div className=\"col-md-4\">\r\n                    <GoalCard \r\n                    title=\"Catalog sales\"\r\n                    iconClass=\"fas fa-shopping-cart\"\r\n                    selectGoal={(title) => props.selectGoal(title)}\r\n                    goal={props.goal}/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <GoalCard \r\n                    title=\"Conversions\"\r\n                    iconClass=\"fas fa-globe\"\r\n                    selectGoal={(title) => props.selectGoal(title)}\r\n                    goal={props.goal}/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <GoalCard \r\n                    title=\"Store traffic\"\r\n                    iconClass=\"fas fa-store\"\r\n                    selectGoal={(title) => props.selectGoal(title)}\r\n                    goal={props.goal}/>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n      \r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MarketingGoal;","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\Checkout\\SubscriptionPlanInfo.js",["331"],"import React from \"react\";\r\nimport * as subscriptionInfo from \"../../../../shared/SubscriptionInfo\";\r\n\r\nconst SubscriptionPlanInfo = (props) => {\r\n  let subscriptionPlanInfo = null;\r\n\r\n  switch (props.subscriptionPlan) {\r\n    case \"Basic\":\r\n      subscriptionPlanInfo = subscriptionInfo.basicPlan;\r\n      break;\r\n\r\n    case \"Premium\":\r\n      subscriptionPlanInfo = subscriptionInfo.premiumPlan;\r\n      break;\r\n\r\n    case \"Deluxe\":\r\n      subscriptionPlanInfo = subscriptionInfo.deluxePlan;\r\n      break;\r\n\r\n    case \"onlyRunAds\":\r\n      subscriptionPlanInfo = subscriptionInfo.onlyRunAdsPlan;\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div className=\"subscription-info font-color\">\r\n      <div className=\"subscription-name\">\r\n        <i className={`fas ${subscriptionPlanInfo.iconClass}`}></i>{\" \"}\r\n        {subscriptionPlanInfo && subscriptionPlanInfo.name}\r\n      </div>\r\n\r\n      <div class=\"subscription-description\">\r\n        Lorem, ipsum dolor sit amet consectetur adipisicing elit. Reiciendis\r\n        deleniti tempora ipsum optio amet blanditiis repudiandae officiis dolore\r\n        asperiores praesentium.\r\n      </div>\r\n\r\n      <div className=\"subscription-options\">\r\n        {/* <p class=\"list-heading\">This plan includes:</p> */}\r\n        <ul>\r\n          {subscriptionPlanInfo &&\r\n            subscriptionPlanInfo.options.map((option, idx) => {\r\n              return (\r\n                <li key={idx}>\r\n                  <i className=\"fas fa-check\"></i> {option}\r\n                </li>\r\n              );\r\n            })}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubscriptionPlanInfo;\r\n","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\SocialPlatforms\\SocialPlatforms.js",["332","333","334"],"import React,{ useState } from 'react';\r\nimport Auxilliary from '../../../../hoc/Auxilliary';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nimport facebookAds from '../../../../assets/facebookAds.png';\r\nimport instagramAds from '../../../../assets/instagramAds.png';\r\nimport googleAds from '../../../../assets/adsGoogle.png';\r\nimport twitterAds from '../../../../assets/twitterAds.png';\r\n\r\n\r\nconst SocialPlatforms = (props) => {\r\n\r\n    return(\r\n        <div className=\"add-form-group\">\r\n            <h3 className=\"border-bottom add-form-label\">Select social media platforms</h3>\r\n            <div className=\"social-media-selection d-md-flex justify-content-between\">\r\n                <div className=\"social-media-box\">\r\n                    <Form.Check\r\n                        custom\r\n                        inline\r\n                        label=\"\"\r\n                        type=\"checkbox\"\r\n                        id={`custom-inline-checkbox-facebook`}\r\n                        className=\"checkbox-big\"\r\n                        name=\"runOnFacebook\"\r\n                        defaultChecked={props.platforms.includes('runOnFacebook') ? true : false}\r\n                        onClick={(e) => props.changeSMPInfo(e)}\r\n                    />\r\n                    <img className=\"img-slim\" src={facebookAds} alt=\"Facebook ads\"/>\r\n                </div>\r\n                <div className=\"social-media-box\">\r\n                    <Form.Check\r\n                        custom\r\n                        inline\r\n                        label=\"\"\r\n                        type=\"checkbox\"\r\n                        id={`custom-inline-checkbox-insta`}\r\n                        className=\"checkbox-big\"\r\n                        name=\"runOnInstagram\"\r\n                        defaultChecked={props.platforms.includes('runOnInstagram') ? true : false}\r\n                        onClick={(e) => props.changeSMPInfo(e)}\r\n                    />\r\n                    <img className=\"img-slim\" src={instagramAds} alt=\"Instagram Ads\"/>\r\n                </div>\r\n                <div className=\"social-media-box\">\r\n                    <Form.Check\r\n                        custom\r\n                        inline\r\n                        label=\"\"\r\n                        type=\"checkbox\"\r\n                        id={`custom-inline-checkbox-google`}\r\n                        className=\"checkbox-big\"\r\n                        name=\"runOnGoogle\"\r\n                        defaultChecked={props.platforms.includes('runOnGoogle') ? true : false}\r\n                        onClick={(e) => props.changeSMPInfo(e)}\r\n                    />\r\n                    <img className=\"img-box\" src={googleAds} alt=\"Google Ads\"/>\r\n                </div>\r\n                {/* <div className=\"social-media-box\">\r\n                    <Form.Check\r\n                        custom\r\n                        inline\r\n                        label=\"\"\r\n                        type=\"checkbox\"\r\n                        id={`custom-inline-checkbox-twitter`}\r\n                        className=\"checkbox-big\"\r\n                        name=\"runOnTwitter\"\r\n                        onClick={(e) => props.changeSMPInfo(e)}\r\n                    />\r\n                    <img className=\"img-box\"src={twitterAds} alt=\"Twitter Ads\"/>\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SocialPlatforms;","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\Checkout\\FbAdViewModal.js",["335","336"],"import React from 'react';\r\nimport {Modal, Button} from 'react-bootstrap';\r\nimport AdViewFb from '../AdPlacement/FacebookPlacements/AdViewFb';\r\n\r\nconst FbAdViewModal = (props) =>{\r\n\r\n    return( \r\n        <div className=\"modal fade\" id=\"FbAdView\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                <div className=\"modal-header mb-3\">\r\n                    <h5 className=\"modal-title \" id=\"exampleModalLongTitle\">View your ad design</h5>\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\" fb-view-modal\">\r\n                    <AdViewFb \r\n                    runOnPlatforms={props.runOnPlatforms}\r\n                    adDetails={props.adDetails}\r\n                    pictureOrVideoUrl={props.pictureOrVideoUrl}\r\n                    headline={props.headline}\r\n                    description={props.description}\r\n                    url={props.url}\r\n                    />\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                    <button type=\"button\" className=\"btn btn-primary\">Edit</button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FbAdViewModal;","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\AdPlacement\\GoogleAd\\AdViewGoogle.js",["337","338"],"import React,{ useState, useEffect } from 'react';\r\n\r\n\r\nconst AdViewGoogle = (props) => {\r\n\r\n\r\n    return(\r\n        <div className=\"ggl-ad-form-view\">\r\n           \r\n            <div className=\"headlines\">\r\n               <span>{props.headlineOne ? props.headlineOne : \"Headline 1 |\"}</span>\r\n               <span>{props.headlineTwo}</span>\r\n               <span>{props.headlineThree}</span>\r\n            </div>\r\n            <div className=\"url \">\r\n                <p><span className=\"ad-box\">Ad</span>{props.url}</p>\r\n            </div>\r\n            <div className=\"description\">\r\n                <p>{props.description}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdViewGoogle;","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\AdPlacement\\FacebookPlacements\\AdViewFb.js",["339","340","341"],"import React,{ useState, useEffect } from 'react';\r\nimport {Tabs, Tab} from 'react-bootstrap'\r\nimport pagePhoto from '../../../../../assets/pagePhoto.jpg'\r\nimport jsAd from '../../../../../assets/jsAd.jpg'\r\nimport saveIconInstagram from '../../../../../assets/saveIconInstagram.png'\r\nimport instagramIcons from '../../../../../assets/instagramIcons.png'\r\n\r\nconst AdViewFb = (props) => {\r\n    const [key, setKey] = useState('facebook');\r\n\r\n    useEffect(() => {\r\n        if(props.runOnPlatforms.includes(\"runOnInstagram\") && !props.runOnPlatforms.includes(\"runOnFacebook\")){\r\n            setKey(\"instagram\");\r\n        }\r\n    }, [])\r\n\r\n    let buttonLabel = {value: \"Learn more\"};\r\n\r\n    if(props.adDetails[props.adDetails.length-1] != null){\r\n        buttonLabel = props.adDetails[props.adDetails.length-1];\r\n    }\r\n\r\n    return(\r\n        <Tabs\r\n            id=\"controlled-tab-example\"\r\n            activeKey={key}\r\n            onSelect={(k) => setKey(k)} \r\n            className=\"fb-ad-view-tabs\"\r\n            >\r\n            {props.runOnPlatforms.includes(\"runOnFacebook\") ? \r\n                <Tab className=\"fb-ad-view-tab\" eventKey=\"facebook\" title=\"Facebook view\">\r\n                    <div className=\"fb-ad-view\">\r\n                        <div className=\"row head my-0 background-white\">\r\n                            <div className=\"col-md-12 d-flex\">\r\n                                <img src={pagePhoto} alt=\"pagePhoto\"/>\r\n                                <div>\r\n                                    <h1>Discover new people</h1>\r\n                                    <p>Sponsored - <span><i class=\"fas fa-globe-europe\"></i></span></p>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-12 description\">\r\n                                {props.description}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"ad-image\">\r\n                            <img src={props.pictureOrVideoUrl != null ? props.pictureOrVideoUrl : jsAd} alt=\"Ad picture\"/>\r\n                        </div>\r\n                        <div className=\" row ad-description my-0\">\r\n                            <div className=\"col-md-8 \">\r\n                                <p className=\"url\">{props.url}</p>\r\n                                <h1 className=\"headline\">{props.headline}</h1>\r\n                                {/* <p className=\"desc\">{props.description}</p> */}\r\n                            </div>\r\n                            <div className=\"col-md-4 \">\r\n                                <button disabled className=\"btn btn-outline-secondary\">{buttonLabel.value}</button>\r\n                            </div>\r\n                        </div>\r\n                    \r\n                    \r\n                    </div>\r\n                </Tab> : null}\r\n            {props.runOnPlatforms.includes(\"runOnInstagram\") ? \r\n                <Tab eventKey=\"instagram\" title=\"Instagram view\">\r\n                    <div className=\"insta-ad-view\">\r\n                        <div className=\"row head\">\r\n                            <div className=\"col-11 d-flex\">\r\n                                <img src={pagePhoto} alt=\"pagePhoto\"/>\r\n                                <div>\r\n                                    <h1>Discover daily</h1>\r\n                                    <p>Sponsored</p>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-1\">\r\n                                <span className=\"three-dots\">&#8230;</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"ad-image\">\r\n                            <img src={props.pictureOrVideoUrl != null ? props.pictureOrVideoUrl : jsAd} alt=\"Ad picture\"/>\r\n                        </div>\r\n                        <div className=\"row ad-description\">\r\n                            <div class=\"blue-field row justify-content-between m-0\">\r\n                                <p className=\"blue-field-title\">{buttonLabel.value}</p>\r\n                                <span className=\"blue-field-arrow\">&#x203A;</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-flex ad-icons\">\r\n                            <div class=\"like-comment-share-icons d-flex justify-content-between\">\r\n                                <img src={instagramIcons} className=\"icon\" alt=\"likeIconInstagram\" />\r\n                                {/* <img src={commentIconInstagram} className=\"commentIcon\" alt=\"commentIconInstagram\" />\r\n                                <img src={likeIconInstagram} className=\"icon\" alt=\"likeIconInstagram\" /> */}\r\n                            </div>\r\n                            <img src={saveIconInstagram} className=\"saveIcon\" alt=\"saveIconInstagram\" />\r\n                        </div>\r\n                        <div class=\"views-section\">\r\n                            <p>125,406 views</p>\r\n                        </div>\r\n                        <div class=\"description-section \">\r\n                            <p className=\"description\"><span className=\"account-name\">discoverdaily </span>{props.description}</p>\r\n                        </div>\r\n                    \r\n                    </div>\r\n                </Tab>\r\n            : null}\r\n           \r\n        </Tabs>\r\n\r\n\r\n        \r\n    );\r\n}\r\n\r\nexport default AdViewFb;","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\Checkout\\CheckoutBox.js",[],"D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\Audience\\SelectForms.js",["342","343","344","345","346"],"import React,{ useEffect, useState} from 'react';\r\n// import ReactSelectGooglePlaces from \"react-select-google-places\";\r\nimport PropTypes from 'prop-types'\r\nimport Select from 'react-select'\r\nimport makeAnimated from 'react-select/animated';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport { countriesData, interestsData } from '../../selectFormsData';\r\n\r\n\r\nexport const AgeFromSelect = (props) => {\r\n\r\n    const customStyles = {\r\n        control: () => ({\r\n          // none of react-select's styles are passed to <Control />\r\n          border: '1px solid red',\r\n        }),\r\n      }\r\n    \r\n    let ageFrom = [];\r\n    for(let i = 13; i <= 65; i++){\r\n        ageFrom.push({ \r\n            value: `${i}`,\r\n            label: `${i}`\r\n        });\r\n    }\r\n\r\n    return(\r\n        <Select defaultValue={ageFrom[`${props.ageValue-13}`]} className=\"audience-form-select-age\" options={ageFrom} onChange={(option) => props.updateAgeFrom(option)}/>\r\n    )\r\n}\r\n\r\n\r\n    // AgeTo\r\nexport const AgeToSelect = (props) => {\r\n\r\n    let ageTo = [];\r\n    for(let i = 13; i <= 65; i++){\r\n        ageTo.push({ \r\n            value: `${i}`,\r\n            label: `${i}`\r\n        });\r\n    }\r\n    ageTo[0] = {value: '13+', label: \"13+\"}\r\n    ageTo[ageTo.length - 1] = {value: '65+', label: \"65+\"}\r\n\r\n\r\n    return(\r\n       <Select defaultValue={ageTo[`${props.ageValue-13}`]} className=\"audience-form-select-age\" options={ageTo} onChange={(option) => props.updateAgeTo(option)}/>\r\n    )\r\n}\r\n\r\n// Gender\r\n\r\nexport const GenderSelect = (props) => {\r\n    let genderOptions = [\r\n        {label: \"All\", value: 'All'},\r\n        {label: \"Men\", value: 'men'},\r\n        {label: \"Women\", value: 'women'},\r\n    ]  \r\n\r\n    return (\r\n        <Select className=\"audience-form-select \" options={genderOptions} defaultValue={genderOptions[0]} onChange={(gender) => props.updateGender(gender)}/>\r\n    )\r\n}\r\n\r\n// Location\r\nexport function LocationSelect(props){\r\n   \r\n    const countries = countriesData.map( country => {\r\n        return {\r\n            ...country,\r\n            label: country.value\r\n        }\r\n    })\r\n\r\n\r\n    const animatedComponents = makeAnimated();\r\n\r\n    return (\r\n        <Select\r\n        closeMenuOnSelect={false}\r\n        name=\"location\"\r\n        onChange={(options, form) => props.saveOptionForm(options, form)}\r\n        components={animatedComponents}\r\n        // defaultValue={props.audience.location}\r\n        isMulti\r\n        options={countries}\r\n        />\r\n    )\r\n}\r\n\r\n\r\n// Interests, behaviors, demographics\r\nexport const InterestsSelect = (props) => {\r\n\r\n    // let selectedOptions = [...props.selectedInterests]\r\n\r\n    // const [ isLoading, setIsLoading] = useState(false)\r\n    // const [ interests , setInterests] = useState([...interestsData])\r\n    const [ value , setValue] = useState([])\r\n    const [ inputValue , setInputValue] = useState('')\r\n\r\n    // Update interests with redux state\r\n    useEffect(() => {\r\n        console.log(props.selectedInterests)\r\n        // if(props.selectedInterests.length !== 0){\r\n        //     const newInterests = [...props.selectedInterests]\r\n        //     setValue(newInterests)\r\n        // }\r\n    }, [props.selectedInterests])\r\n\r\n    \r\n    const createOption = (label) => ({\r\n        label,\r\n        value: label.toLowerCase().replace(/\\W/g, ''),\r\n      });\r\n    \r\n\r\n    const handleChange = (value) => {\r\n        setValue(value)\r\n        props.saveInterests(value)\r\n    };\r\n\r\n    const handleInputChange = (inputValue) => {\r\n        setInputValue(inputValue)\r\n    };\r\n\r\n    const handleKeyDown = (event) => {\r\n    // const { inputValue, value } = this.state;\r\n    if (!inputValue) return;\r\n\r\n    switch (event.key) {\r\n        case 'Enter':\r\n        setInputValue('')\r\n        setValue([...value, createOption(inputValue)])\r\n        props.saveInterests([...value, createOption(inputValue)])\r\n        \r\n        case 'Tab':\r\n        setInputValue('')\r\n        setValue([...value, createOption(inputValue)])\r\n        \r\n        event.preventDefault();\r\n    }\r\n        \r\n    };\r\n\r\n    return (\r\n        <CreatableSelect\r\n        isMulti\r\n        name=\"interests\"\r\n        onChange={handleChange}\r\n        onInputChange={handleInputChange}\r\n        onKeyDown={handleKeyDown}\r\n        inputValue={inputValue}\r\n        isClearable\r\n        menuIsOpen={false}\r\n        placeholder=\"Type keywords\"\r\n        value={value}\r\n      />\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","D:\\Code\\AdWeDo\\src\\shared\\SubscriptionInfo.js",[],"D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\MarketingGoal\\GoalCard.js",["347"],"import React from 'react';\r\n\r\n\r\nconst GoalCard = (props) => {\r\n\r\n\r\n    return(\r\n        <div className={props.goal == props.title ? \"goals-card text-center active\" : \"goals-card text-center\"} onClick={() => props.selectGoal(props.title)}>\r\n        <i class={props.iconClass}></i>\r\n        <h4>{props.title}</h4>\r\n       \r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GoalCard;","D:\\Code\\AdWeDo\\src\\hoc\\Auxilliary.js",[],"D:\\Code\\AdWeDo\\src\\components\\AdManager\\selectFormsData.js",[],"D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\AdPlacement\\FacebookPlacements\\FacebookPlacements.js",["348","349","350","351","352","353","354","355","356","357","358","359","360"],"import React,{ useState, useEffect, useContext } from 'react';\r\nimport { Form, Alert, ProgressBar } from 'react-bootstrap';\r\nimport { ButtonLabelSelect } from '../PlacementSelectForms'\r\nimport CustomBoxes from './CustomBoxes';\r\nimport AdViewFb from './AdViewFb';\r\nimport axios from '../../../../../axios'\r\n\r\n// Firebase \r\nimport { db, storage } from '../../../../../base'\r\nimport { AuthContext } from '../../../../Auth/Auth';\r\n\r\n//Redux\r\nimport * as actionTypes from '../../../../../store/actions/actionTypes'\r\nimport { connect } from \"react-redux\"\r\nimport Axios from 'axios';\r\n\r\n\r\nconst FacebookPlacements = (props) => {\r\n    // Auth context\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [userData, setUserData] = useState()\r\n\r\n    const runOnPlatforms = [...props.adInfo.runOn]\r\n\r\n    // Social media platforms user chose\r\n    const [runOnFacebook, setRunOnFacebook] = useState(runOnPlatforms.includes(\"runOnFacebook\") ? true : false)\r\n    const [runOnInstagram, setRunOnInstagram] = useState(runOnPlatforms.includes(\"runOnInstagram\") ? true : false)\r\n    // const [runOnGoogle, setRunOnGoogle] = useState(props.runOnPlatforms.includes(\"runOnGoogle\") ? true : false)\r\n\r\n    // Placements\r\n    const [automaticPlacement, setAutomaticPlacement] = useState(true)\r\n    const [customPlacement, setCustomPlacement] = useState(false)\r\n\r\n    // Ad view state\r\n    const [pictureOrVideo, setPictureOrVideo] = useState(null)\r\n    const [pictureOrVideoUrl, setPictureOrVideoUrl] = useState(null)\r\n    const [imageUploadProgress, setImageUploadProgress] = useState(0)\r\n    const [isUploading, setIsUploading] = useState(false)\r\n\r\n    const [headline, setHeadline] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n\r\n    // Errors\r\n    // Development\r\n    const [errors, setErrors] = useState({\r\n        headline: \"\",\r\n        description: \"\",\r\n    })\r\n\r\n    // Production\r\n    // const [showErrors, setShowErrors] = useState(false)\r\n    // const [errors, setErrors] = useState({\r\n    //     // url: \"URL is invalid. Check if you have 'https' or 'http' in your URL.\",\r\n    //     // devices: \"You must select at least 1 type of device\",\r\n    //     headline: \"You have to fill this field\",\r\n    //     description: \"You have to fill this field\",\r\n    //     headlineOneGgl: \"You have to fill this field\",\r\n    //     headlineTwoGgl: \"You have to fill this field\",\r\n    //     headlineThreeGgl: \"You have to fill this field\",\r\n    //     descriptionGgl: \"You have to fill this field\"\r\n    // })\r\n\r\n    \r\n\r\n    \r\n\r\n    const changeToAutomatic = () =>{\r\n        // if(e.target.checked){\r\n            \r\n            setCustomPlacement(false)\r\n            setAutomaticPlacement(true)\r\n        // }\r\n    }\r\n\r\n    const changeToCustom = () =>{\r\n        // if(e.target.checked){\r\n            setCustomPlacement(true)\r\n            setAutomaticPlacement(false)\r\n        // }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let adDetails = [...props.facebookAd.adDetails] \r\n        let placements = {...props.facebookAd.placements}\r\n\r\n        if(placements.automatic){\r\n            changeToAutomatic()\r\n        }else{\r\n            changeToCustom()\r\n        }\r\n\r\n        // Update detail values with redux state\r\n        if(adDetails !== []){\r\n            adDetails.map( detailInfo => {\r\n                switch(detailInfo.field){\r\n                    case \"headline\":\r\n                        setHeadline(detailInfo.value)\r\n                    case \"description\":\r\n                        setDescription(detailInfo.value)\r\n                    // case \"buttonLabel\":\r\n                    //     setButtonLabel(detailInfo.value)\r\n                }\r\n            })\r\n        }\r\n\r\n        axios.get(`/users/${currentUser.uid}.json`)\r\n        .then(response => {\r\n            setUserData(response.data)\r\n        }).catch(err => console.log(err))\r\n\r\n\r\n    }, [props.adInfo.facebookAd.adDetails])\r\n\r\n    const pictureChangeHandler = (event) => {\r\n        // Get image file\r\n        const file = event.target.files[0];\r\n        // console.log(event.target.files[0])\r\n\r\n\r\n        // Save url of picture to state\r\n        // let pictureOrVideoUrl = URL.createObjectURL(event.target.files[0])\r\n\r\n        // Set state\r\n        setPictureOrVideo(file)\r\n\r\n        // Set pictureorVideoUrl in firebase realtime db\r\n        // db.ref(\"users/\" + currentUser.uid + \"/orders/\"+`/${props.adInfo.name}/adInfo/facebookAd/adDetails/0/value`).set(pictureOrVideoUrl)\r\n\r\n        const username = userData.firstName + userData.lastName;\r\n        const campaignName = props.adInfo.name;\r\n        const fileName = file.name;\r\n\r\n        // Firebase Storage \r\n        const uploadTask = storage.ref(`${username}/${campaignName}/${fileName}`).put(file);\r\n        \r\n        uploadTask.on(\r\n            \"state_changed\",\r\n            snapshot => {\r\n                setIsUploading(true)\r\n\r\n              // progress function ...\r\n              const progress = Math.round(\r\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n\r\n              setImageUploadProgress(progress)\r\n            },\r\n            error => {\r\n              // Error function ...\r\n              console.log(error);\r\n            },\r\n            () => {\r\n                setIsUploading(false)\r\n              // complete function ...\r\n              storage\r\n                .ref(username)\r\n                .child(`${campaignName}/${fileName}`)\r\n                .getDownloadURL()\r\n                .then(url => {\r\n                  setPictureOrVideoUrl(url);\r\n                  props.savePictureOrVideoUrl(url);\r\n                });\r\n            }\r\n          );\r\n    }\r\n\r\n    // console.log(\"pictureOrVideo\", pictureOrVideo, \"pictureOrVideoUrl\", pictureOrVideoUrl)\r\n\r\n    // const uploadPictureHandler = () => {\r\n    //     // Validation\r\n    //     //Save to redux state\r\n        \r\n    // }\r\n\r\n    // console.log(picture)\r\n\r\n\r\n    let customCheckboxes = null;\r\n     \r\n    if(customPlacement){\r\n        customCheckboxes = (\r\n            <div className=\"col-md-9\">\r\n               <CustomBoxes selectedCustomPlacements={props.facebookAd.placements.custom}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Facebook ad details\r\n    const saveFbPlacements = (e) => {\r\n        e.preventDefault()        \r\n\r\n        // Automatic Facebook placements update state \r\n        const automaticPlacements = e.target[0].checked;\r\n        let fbAdDetails = [];\r\n        let fbAdDetailsErrors = {...errors};\r\n\r\n        // for(let i = 0; i <= 11; i++){\r\n        //     console.log(\"e field\",e.target.input)\r\n\r\n        // }\r\n\r\n        if(automaticPlacements){\r\n            // Only headline, description and button label will be saved to adDetails\r\n            for(let i = 3; i <= 4; i++){\r\n                \r\n                fbAdDetails.push({field: e.target[i].name, value: e.target[i].value})\r\n                \r\n                const fieldName = e.target[i].name\r\n\r\n                // Validation\r\n                if(e.target[i].value.length > 0){\r\n                    // Remove error message\r\n                    fbAdDetailsErrors = {\r\n                        ...fbAdDetailsErrors,\r\n                        [fieldName]: \"\"\r\n                    }\r\n                }else{\r\n                    // Set error message again\r\n                    fbAdDetailsErrors = {\r\n                        ...fbAdDetailsErrors,\r\n                        [fieldName]: \"You have to fill this field\"\r\n                    }\r\n                }\r\n                \r\n            }\r\n        }\r\n        \r\n\r\n\r\n        // Custom Facebook placements update state \r\n        let customFbPlacements = e.target[1].checked;\r\n        let customPlacements = [];\r\n\r\n        if(customFbPlacements){\r\n            for(let i = 2; i <= 6; i++){\r\n                // console.log(\"placements\", e.target[i])\r\n                customPlacements.push({name: e.target[i].name, checked: e.target[i].checked })\r\n            }\r\n\r\n            // Custom placements add 6 more form fields so i goes from 7 to 9 for ad details\r\n            for(let i = 8; i <= 9; i++){\r\n                fbAdDetails.push({field: e.target[i].name, value: e.target[i].value})\r\n\r\n                const fieldName = e.target[i].name\r\n\r\n                // Validation\r\n                if(e.target[i].value.length > 0){\r\n                    // Remove error message\r\n                    fbAdDetailsErrors = {\r\n                        ...fbAdDetailsErrors,\r\n                        [fieldName]: \"\"\r\n                    }\r\n                }else{\r\n                    // Set error message again\r\n                    fbAdDetailsErrors = {\r\n                        ...fbAdDetailsErrors,\r\n                        [fieldName]: \"You have to fill this field\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        \r\n        // Set showError to true in case of non valid details\r\n        if(fbAdDetailsErrors.headline != \"\" ||  fbAdDetailsErrors.description != \"\" ){\r\n            props.setShowErrors(true)\r\n            props.setIsFbFormSaved(false)\r\n        }else{\r\n            props.setIsFbFormSaved(true)\r\n        }\r\n\r\n        setErrors(fbAdDetailsErrors)\r\n\r\n        \r\n\r\n        const placements = {\r\n            automatic: automaticPlacements,\r\n            custom: customPlacements\r\n        }\r\n\r\n        props.saveFacebookPlacements(placements)\r\n        props.saveFacebookAdInfo(fbAdDetails)\r\n\r\n    }\r\n\r\n\r\n    let headlineAlert = null\r\n    if(errors.headline != \"\" && props.showErrors){\r\n        headlineAlert = (\r\n            <Alert className=\"alert\" variant='danger'>\r\n                {errors.headline}\r\n            </Alert>\r\n        )\r\n    }\r\n\r\n    let descriptionAlert = null\r\n    if(errors.description != \"\" && props.showErrors){\r\n        descriptionAlert = (\r\n            <Alert className=\"alert\" variant='danger'>\r\n                {errors.description}\r\n            </Alert>\r\n        )\r\n    }\r\n\r\n    // Picture or video\r\n    let fileInput = null\r\n\r\n    let title = null;\r\n    if(runOnFacebook && runOnInstagram){\r\n        title = \"Facebook and Instagram\"\r\n    }else if(runOnFacebook){\r\n        title = \"Facebook\"\r\n    }else if(runOnInstagram){\r\n        title = \"Instagram\"\r\n    }\r\n\r\n    return(\r\n        <div className=\"fb-placements\">\r\n        <h1 className=\" font-color\">{title}</h1>\r\n            <Form onSubmit={(e) => saveFbPlacements(e)} onChange={e => props.setIsFbFormSaved(false)} className=\"fb-palacements-form row\">\r\n           \r\n               <div className=\"fb-placements-radioBtns col-md-3\">\r\n               <h3 className=\"fb-placements-label font-color \">Placements</h3>\r\n                   <div className=\"\">\r\n                    <Form.Check\r\n                            custom\r\n                            block\r\n                            label=\"Automatic\"\r\n                            type=\"radio\"\r\n                            id={`automatic-inline-radio-facebook`}\r\n                            className=\"radio-fb\"\r\n                            name=\"automatic\"\r\n                            checked={automaticPlacement}\r\n                            onChange={(e) => changeToAutomatic(e)}\r\n                        />\r\n                        <Form.Check\r\n                            custom\r\n                            block\r\n                            label=\"Custom\"\r\n                            type=\"radio\"\r\n                            id={`custom-inline-radio-facebook`}\r\n                            className=\"radio-fb\"\r\n                            name=\"custom\"\r\n                            checked={customPlacement}\r\n                            onChange={(e) => changeToCustom(e)}\r\n                        />\r\n                   </div>\r\n               </div>\r\n\r\n               { customCheckboxes }\r\n\r\n               <div className=\"container fb-ad-form\">\r\n                   <div className=\"row\">\r\n                        <h3 className=\"col-md-12 pb-2  fb-ad-form-label border-bottom font-color\">Ad appearance</h3>\r\n                        <div className=\"col-md-6\">\r\n                            <Form.Group>\r\n\r\n                                <div className=\"fb-ad-form-field row\">\r\n                                    <input \r\n                                    name=\"pictureOrVideo\"\r\n                                    style={{display: \"none\"}} \r\n                                    type=\"file\" \r\n                                    onChange={pictureChangeHandler} \r\n                                    ref={input => {fileInput = input}}/>\r\n\r\n                                    <div onClick={() => fileInput.click()} className=\"media-box col text-center\">\r\n                                        {isUploading ?  \r\n                                            <div class=\"progress-bar col-12\">\r\n                                                <ProgressBar animated now={imageUploadProgress} label={`${imageUploadProgress}%`}/>\r\n                                            </div> \r\n                                        : <p className=\"\">Select a picture</p>} \r\n                                        <i class=\"fas fa-images\"></i>\r\n                                    </div>\r\n                                \r\n                                </div>\r\n                                \r\n                                <div className=\"fb-ad-form-field\">\r\n                                    <Form.Label className=\"fb-ad-form-field-label\">Headline</Form.Label>\r\n                                    {headlineAlert}\r\n                                    <Form.Control name=\"headline\" value={headline} onChange={(e) => setHeadline(e.target.value)} type=\"text\" placeholder=\"Enter headline\" />\r\n                                </div>\r\n                                <div className=\"fb-ad-form-field\">\r\n                                    <Form.Label className=\"fb-ad-form-field-label\">Description</Form.Label>\r\n                                    {descriptionAlert}\r\n                                    <Form.Control name=\"description\" value={description} onChange={(e) => setDescription(e.target.value)} type=\"text\" placeholder=\"Enter a description for your ad\" />\r\n                                    \r\n                                </div>\r\n                                <div className=\"fb-ad-form-field\">\r\n                                    <Form.Label className=\"fb-ad-form-field-label\">Button label</Form.Label>\r\n                                    <ButtonLabelSelect adDetails={props.facebookAd.adDetails} saveButtonLabel={(buttonLabel) => props.saveButtonLabel(buttonLabel)}/>\r\n                                   \r\n                                </div>\r\n                            \r\n                            \r\n                            </Form.Group>\r\n                            <div className=\" d-flex justify-content-center w-100\">\r\n                                <button type=\"submit\" disabled={props.isFormSaved ? true : false} className=\"btn details-btn\">{props.isFormSaved ? \"Confirmed\" : \"Confirm details\"}</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 mt-3\">\r\n                            <AdViewFb \r\n                            runOnPlatforms={props.adInfo.runOn}\r\n                            adDetails={props.facebookAd.adDetails}\r\n                            pictureOrVideoUrl={pictureOrVideoUrl}\r\n                            headline={headline ? headline : \"Example headline\"}\r\n                            description={description ? description : \"Example description of your product\"}\r\n                            url={props.adInfo.url ? props.adInfo.url : \"www.examplewebsite.com\"}\r\n                            />\r\n                        </div>\r\n                   </div>\r\n               </div>\r\n\r\n               \r\n                \r\n            </Form>\r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{ \r\n        adInfo: state.adInfo,\r\n        facebookAd: state.adInfo.facebookAd\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        saveDevices: (devices) => dispatch({type: actionTypes.SAVE_DEVICES, devices: devices}),\r\n        saveUrl: (url) => dispatch({type: actionTypes.SAVE_URL, url: url}),\r\n        savePictureOrVideoUrl: (mediaFile) => dispatch({type: actionTypes.SAVE_PIC_OR_VIDEO, mediaFile: mediaFile}),\r\n        saveButtonLabel: (buttonLabel) => dispatch({type: actionTypes.SAVE_BUTTON_LABEL, buttonLabel: buttonLabel}),\r\n        saveFacebookPlacements: (placements) => dispatch({type: actionTypes.SAVE_FACEBOOK_PLACEMENTS, placements: placements}),\r\n        saveFacebookAdInfo: (adDetails) => dispatch({type: actionTypes.SAVE_FACEBOOK_AD_DETAILS, adDetails: adDetails}),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FacebookPlacements);\r\n\r\n","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\AdPlacement\\GoogleAd\\GoogleAdForm.js",["361","362","363","364","365","366"],"import React,{ useState, useEffect } from 'react';\r\nimport { Form, Alert } from 'react-bootstrap';\r\nimport AdViewGoogle from './AdViewGoogle';\r\n\r\n\r\n\r\nconst GooglelAdForm = (props) => {\r\n\r\n\r\n    const [headlineOne, setHeadlineOne] = useState(\"\");\r\n    const [headlineTwo, setHeadlineTwo] = useState(\"\");\r\n    const [headlineThree, setHeadlineThree] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        // Set 2 way binding from redux state\r\n        const details = {...props.selectedDetails}\r\n        if(details != {}){\r\n            setHeadlineOne(details.headlineOne)\r\n            setHeadlineTwo(details.headlineTwo)\r\n            setHeadlineThree(details.headlineThree)\r\n            setDescription(details.headlineTwo)\r\n        }\r\n\r\n    }, [])\r\n\r\n    let gglPlacements = {\r\n        headlineOne: headlineOne,\r\n        headlineTwo: headlineTwo,\r\n        headlineThree: headlineThree,\r\n        description: description,\r\n    }\r\n\r\n\r\n    // Alerts\r\n\r\n    let headlineOneAlert = null\r\n    if(props.headlineOneError != \"\" && props.showErrors){\r\n        headlineOneAlert = (\r\n            <Alert className=\"alert-danger\" variant='danger'>\r\n                {props.headlineOneError}\r\n            </Alert>\r\n        )\r\n    }\r\n    let headlineTwoAlert = null\r\n    if(props.headlineTwoError != \"\" && props.showErrors){\r\n        headlineTwoAlert = (\r\n            <Alert className=\"alert-danger\" variant='danger'>\r\n                {props.headlineTwoError}\r\n            </Alert>\r\n        )\r\n    }\r\n    let headlineThreeAlert = null\r\n    if(props.headlineThreeError != \"\" && props.showErrors){\r\n        headlineThreeAlert = (\r\n            <Alert className=\"alert-danger\" variant='danger'>\r\n                {props.headlineThreeError}\r\n            </Alert>\r\n        )\r\n    }\r\n    let descriptionAlert = null\r\n    if(props.descriptionError != \"\" && props.showErrors){\r\n        descriptionAlert = (\r\n            <Alert className=\"alert-danger\" variant='danger'>\r\n                {props.descriptionError}\r\n            </Alert>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div className=\"ggl-ad\">\r\n            <h1 className=\"ggl-ad-label font-color\">Google</h1>\r\n            <Form onSubmit={e => props.saveGooglePlacements(e, gglPlacements)} onChange={e => props.changeGglForm(e)} className=\"ggl-ad-form row\">\r\n               <div className=\"container ggl-ad-fields\">\r\n                   <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <Form.Group>\r\n                                \r\n                                <div className=\"ggl-ad-form-field\">\r\n                                    <Form.Label className=\"ggl-ad-form-field-label\">Headline 1</Form.Label>\r\n                                    {headlineOneAlert}\r\n                                    <Form.Control value={headlineOne} onChange={(e) => setHeadlineOne(e.target.value)} type=\"text\" placeholder=\"Enter headline 1\" />\r\n                                </div>\r\n                                <div className=\"ggl-ad-form-field\">\r\n                                    <Form.Label className=\"ggl-ad-form-field-label\">Headline 2</Form.Label>\r\n                                    {headlineTwoAlert}\r\n                                    <Form.Control value={headlineTwo} onChange={(e) => setHeadlineTwo(e.target.value)} type=\"text\" placeholder=\"Enter headline 2\" />\r\n                                </div>\r\n                                <div className=\"ggl-ad-form-field\">\r\n                                    <Form.Label className=\"ggl-ad-form-field-label\">Headline 3</Form.Label>\r\n                                    {headlineThreeAlert}\r\n                                    <Form.Control value={headlineThree} onChange={(e) => setHeadlineThree(e.target.value)} type=\"text\" placeholder=\"Enter headline 3\" />\r\n                                </div>\r\n                                <div className=\"ggl-ad-form-field\">\r\n                                    <Form.Label className=\"ggl-ad-form-field-label\">Description</Form.Label>\r\n                                    {descriptionAlert}\r\n                                    <Form.Control value={description} onChange={(e) => setDescription(e.target.value)} type=\"text\" placeholder=\"Enter a description for your ad\" />\r\n                                </div>\r\n                                {/* <div className=\"ggl-ad-form-field\">\r\n                                    <Form.Label className=\"ggl-ad-form-field-label\">Website URL</Form.Label>\r\n                                    <Form.Control value='' onChange={() => {}} type=\"text\" placeholder=\"Enter your website URL\" />\r\n                                </div> */}\r\n                            \r\n                            \r\n                            </Form.Group>\r\n                            <div className=\" d-flex justify-content-center w-100\">\r\n                                <button type=\"submit\" disabled={props.isFormSaved ? true : false} className=\"btn confirm-details\">{props.isFormSaved ? \"Confirmed\" : \"Confirm details\"}</button>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-md-6 mt-5\">\r\n                            <h5 className=\"view-label border-bottom pb-2 mb-4\">View ad</h5> \r\n                            <AdViewGoogle \r\n                            headlineOne={headlineOne ? headlineOne : \"Headline 1 |\"}\r\n                            headlineTwo={headlineTwo ? headlineTwo : \"Headline 2 |\"}\r\n                            headlineThree={headlineThree ? headlineThree : \"Headline 3\"}\r\n                            description={description ? description : \"Your description will be shown here\"}\r\n                            url={props.url ? props.url : \"http://example.com\"}\r\n                            />\r\n                        </div>\r\n                   </div>\r\n                   \r\n               </div>\r\n               \r\n            </Form>\r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GooglelAdForm;","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\AdPlacement\\PlacementSelectForms.js",["367","368","369","370"],"import React, { useState } from 'react';\r\nimport Select from 'react-select'\r\n// import makeAnimated from 'react-select/animated';\r\n// import CreatableSelect from 'react-select/creatable';\r\n\r\n\r\nexport const DevicesSelect = (props) => {\r\n   \r\n    let devices = [\r\n        {\r\n            label: \"Devices\",\r\n            options: [\r\n                {label: \"All devices\", value: 'All devices'},\r\n                {label: \"Desktop and laptop computers\", value: 'Desktop and laptop computers'},\r\n                {label: \"iOS devices\", value: 'iOS devices'},\r\n                {label: \"Android devices\", value: 'Android devices'},\r\n                {label: \"Other mobile\", value: 'Other mobile'},\r\n            ]\r\n        },\r\n        \r\n    ] \r\n\r\n    \r\n\r\n    const groupStyles = {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n    };\r\n\r\n    const formatGroupLabel = data => (\r\n        <div style={groupStyles}>\r\n          <span>{data.label}</span>\r\n          {/* <span style={groupBadgeStyles}>{data.options.length}</span> */}\r\n        </div>\r\n      );\r\n\r\n    \r\n    let defaultValues = []\r\n\r\n    if(props.selectedDevices){\r\n        defaultValues = props.selectedDevices.map( device => {\r\n            for(let i = 0; i < devices[0].options.length; i++){\r\n                if(devices[0].options[i].value === device){\r\n                    return devices[0].options[i]\r\n                }\r\n            }\r\n        })\r\n    }\r\n    \r\n\r\n\r\n    return (\r\n        <Select\r\n        defaultValue={defaultValues}\r\n        options={devices}\r\n        isMulti\r\n        formatGroupLabel={formatGroupLabel}\r\n        onChange={devices => props.saveDevices(devices)}\r\n        />\r\n    )\r\n}\r\n\r\nexport function ButtonLabelSelect(props){\r\n   \r\n    let buttonLabels = [\r\n        {label: \"Aply now\", value: 'Aply now', field: \"buttonLabel\"},\r\n        {label: \"Book now\", value: 'Book now', field: \"buttonLabel\"},\r\n        {label: \"Contact us\", value: 'Contact us', field: \"buttonLabel\"},\r\n        {label: \"Donate now\", value: 'Donate now', field: \"buttonLabel\"},\r\n        {label: \"Learn more\", value: 'Learn more', field: \"buttonLabel\"},\r\n        {label: \"Shop now\", value: 'Shop now', field: \"buttonLabel\"},\r\n        {label: \"Sign up\", value: 'Sign up', field: \"buttonLabel\"},\r\n        {label: \"Watch more\", value: 'Watch more', field: \"buttonLabel\"},\r\n        {label: \"Download\", value: 'Download', field: \"buttonLabel\"},\r\n        {label: \"Request time\", value: 'Request time', field: \"buttonLabel\"},\r\n    ] \r\n\r\n    const [buttonLabel, setButtonLabel] = useState(props.adDetails ? props.adDetails[props.adDetails.length-1] : buttonLabels[4])\r\n    \r\n\r\n    const groupStyles = {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n    };\r\n    const groupBadgeStyles = {\r\n        backgroundColor: '#EBECF0',\r\n        borderRadius: '2em',\r\n        color: '#172B4D',\r\n        display: 'inline-block',\r\n        fontSize: 12,\r\n        fontWeight: 'normal',\r\n        lineHeight: '1',\r\n        minWidth: 1,\r\n        padding: '0.16666666666667em 0.5em',\r\n        textAlign: 'center',\r\n    };\r\n\r\n    return (\r\n        <Select\r\n        defaultValue={buttonLabel}\r\n        options={buttonLabels}\r\n        onChange={buttonLabel => props.saveButtonLabel(buttonLabel)}\r\n        />\r\n    )\r\n}\r\n","D:\\Code\\AdWeDo\\src\\components\\AdManager\\CreateAd\\AdPlacement\\FacebookPlacements\\CustomBoxes.js",["371"],"import React,{ useState, useEffect } from 'react';\r\n\r\nimport { Form } from 'react-bootstrap';\r\n// import Select from 'react-select'\r\n// import makeAnimated from 'react-select/animated';\r\n\r\n\r\nconst CustomBoxes = (props) => {\r\n    let placements = [...props.selectedCustomPlacements]\r\n\r\n    const [customBoxes, setCustomBoxes] = useState([\r\n        {name:\"newsFeed\", checked: placements.length > 0 ? placements[0].checked : false,  label: \"News Feed\", id:`custom-fb-newsFeed`},\r\n        {name:\"marketplace\", checked: placements.length > 0 ? placements[1].checked : false,  label: \"Marketplace\", id:`custom-fb-checkbox-marketplace`},\r\n        {name:\"videoFeeds\", checked: placements.length > 0 ? placements[2].checked : false,  label: \"Video Feeds\", id:`custom-fb-videoFeeds`},\r\n        {name:\"rightColumn\", checked: placements.length > 0 ? placements[3].checked : false,  label: \"Right Column\", id:`custom-fb-rightColumn`},\r\n        {name:\"stories\", checked: placements.length > 0 ? placements[4].checked : false,  label: \"Stories\", id:`custom-fb-stories`},\r\n    ]) \r\n\r\n\r\n    // useEffect(() => {\r\n    //     console.log(\"Custom boxes changed\")\r\n    // },[customBoxes])\r\n\r\n    const handleChange = (e) => {\r\n        for(let i = 0; i < customBoxes.length; i++){\r\n            const updatedCheckboxes = [...customBoxes]\r\n            if(updatedCheckboxes[i].name === e.target.name){\r\n                updatedCheckboxes[i].checked = e.target.checked\r\n\r\n                setCustomBoxes(updatedCheckboxes)\r\n                \r\n            }\r\n        }\r\n  \r\n    }\r\n\r\n    // console.log(customBoxes)\r\n\r\n    return(\r\n        <div className=\"row customCheckboxes\">\r\n\r\n            { customBoxes.map( box =>{\r\n                return  <div key={box.name} className=\"col-md-4 d-flex align-items-center\">\r\n                            <Form.Check\r\n                                custom\r\n                                // inline\r\n                                label=\"\"\r\n                                aria-label={box.label}\r\n                                type=\"checkbox\"\r\n                                id={box.id}\r\n                                className=\"customCheckbox\"\r\n                                name={box.name}\r\n                                checked={box.checked}\r\n                                onChange={(e) => handleChange(e)}\r\n                                />\r\n                                <label>{box.label}</label>\r\n                                <i class=\"far fa-eye\"></i>\r\n                        </div>\r\n            })}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomBoxes;",{"ruleId":"372","replacedBy":"373"},{"ruleId":"374","replacedBy":"375"},{"ruleId":"376","severity":1,"message":"377","line":2,"column":10,"nodeType":"378","messageId":"379","endLine":2,"endColumn":14},{"ruleId":"376","severity":1,"message":"380","line":2,"column":25,"nodeType":"378","messageId":"379","endLine":2,"endColumn":33},{"ruleId":"376","severity":1,"message":"381","line":3,"column":10,"nodeType":"378","messageId":"379","endLine":3,"endColumn":16},{"ruleId":"376","severity":1,"message":"382","line":3,"column":18,"nodeType":"378","messageId":"379","endLine":3,"endColumn":23},{"ruleId":"376","severity":1,"message":"383","line":8,"column":8,"nodeType":"378","messageId":"379","endLine":8,"endColumn":15},{"ruleId":"384","severity":1,"message":"385","line":68,"column":9,"nodeType":"386","endLine":68,"endColumn":58},{"ruleId":"384","severity":1,"message":"385","line":73,"column":9,"nodeType":"386","endLine":73,"endColumn":59},{"ruleId":"384","severity":1,"message":"385","line":114,"column":11,"nodeType":"386","endLine":114,"endColumn":67},{"ruleId":"387","severity":1,"message":"388","line":38,"column":5,"nodeType":"389","endLine":38,"endColumn":14,"suggestions":"390"},{"ruleId":"384","severity":1,"message":"391","line":93,"column":17,"nodeType":"386","endLine":93,"endColumn":57},{"ruleId":"384","severity":1,"message":"391","line":100,"column":17,"nodeType":"386","endLine":100,"endColumn":47},{"ruleId":"384","severity":1,"message":"391","line":107,"column":17,"nodeType":"386","endLine":107,"endColumn":47},{"ruleId":"384","severity":1,"message":"391","line":152,"column":17,"nodeType":"386","endLine":152,"endColumn":60},{"ruleId":"376","severity":1,"message":"392","line":5,"column":8,"nodeType":"378","messageId":"379","endLine":5,"endColumn":11},{"ruleId":"376","severity":1,"message":"393","line":107,"column":19,"nodeType":"378","messageId":"379","endLine":107,"endColumn":29},{"ruleId":"394","severity":1,"message":"395","line":109,"column":41,"nodeType":"396","messageId":"397","endLine":109,"endColumn":42,"suggestions":"398"},{"ruleId":"384","severity":1,"message":"391","line":177,"column":15,"nodeType":"386","endLine":177,"endColumn":26},{"ruleId":"376","severity":1,"message":"380","line":2,"column":17,"nodeType":"378","messageId":"379","endLine":2,"endColumn":25},{"ruleId":"376","severity":1,"message":"399","line":16,"column":9,"nodeType":"378","messageId":"379","endLine":16,"endColumn":13},{"ruleId":"376","severity":1,"message":"400","line":2,"column":10,"nodeType":"378","messageId":"379","endLine":2,"endColumn":15},{"ruleId":"376","severity":1,"message":"380","line":2,"column":17,"nodeType":"378","messageId":"379","endLine":2,"endColumn":25},{"ruleId":"376","severity":1,"message":"377","line":2,"column":39,"nodeType":"378","messageId":"379","endLine":2,"endColumn":43},{"ruleId":"376","severity":1,"message":"401","line":3,"column":10,"nodeType":"378","messageId":"379","endLine":3,"endColumn":21},{"ruleId":"376","severity":1,"message":"402","line":4,"column":10,"nodeType":"378","messageId":"379","endLine":4,"endColumn":14},{"ruleId":"376","severity":1,"message":"403","line":7,"column":8,"nodeType":"378","messageId":"379","endLine":7,"endColumn":20},{"ruleId":"376","severity":1,"message":"404","line":8,"column":8,"nodeType":"378","messageId":"379","endLine":8,"endColumn":20},{"ruleId":"376","severity":1,"message":"392","line":2,"column":8,"nodeType":"378","messageId":"379","endLine":2,"endColumn":11},{"ruleId":"376","severity":1,"message":"405","line":3,"column":8,"nodeType":"378","messageId":"379","endLine":3,"endColumn":13},{"ruleId":"376","severity":1,"message":"406","line":7,"column":13,"nodeType":"378","messageId":"379","endLine":7,"endColumn":21},{"ruleId":"387","severity":1,"message":"388","line":52,"column":10,"nodeType":"389","endLine":52,"endColumn":19,"suggestions":"407"},{"ruleId":"384","severity":1,"message":"391","line":101,"column":29,"nodeType":"386","endLine":101,"endColumn":69},{"ruleId":"384","severity":1,"message":"391","line":102,"column":29,"nodeType":"386","endLine":102,"endColumn":59},{"ruleId":"384","severity":1,"message":"391","line":103,"column":29,"nodeType":"386","endLine":103,"endColumn":59},{"ruleId":"384","severity":1,"message":"391","line":131,"column":29,"nodeType":"386","endLine":131,"endColumn":76},{"ruleId":"376","severity":1,"message":"408","line":8,"column":16,"nodeType":"378","messageId":"379","endLine":8,"endColumn":21},{"ruleId":"376","severity":1,"message":"381","line":22,"column":8,"nodeType":"378","messageId":"379","endLine":22,"endColumn":14},{"ruleId":"376","severity":1,"message":"409","line":23,"column":8,"nodeType":"378","messageId":"379","endLine":23,"endColumn":18},{"ruleId":"376","severity":1,"message":"410","line":27,"column":13,"nodeType":"378","messageId":"379","endLine":27,"endColumn":24},{"ruleId":"411","severity":1,"message":"412","line":154,"column":50,"nodeType":"413","messageId":"414","endLine":154,"endColumn":51},{"ruleId":"376","severity":1,"message":"415","line":1,"column":17,"nodeType":"378","messageId":"379","endLine":1,"endColumn":27},{"ruleId":"387","severity":1,"message":"416","line":74,"column":8,"nodeType":"389","endLine":74,"endColumn":10,"suggestions":"417"},{"ruleId":"394","severity":1,"message":"395","line":106,"column":99,"nodeType":"396","messageId":"397","endLine":106,"endColumn":100,"suggestions":"418"},{"ruleId":"419","severity":1,"message":"420","line":140,"column":40,"nodeType":"413","messageId":"421","endLine":140,"endColumn":42},{"ruleId":"419","severity":1,"message":"420","line":140,"column":78,"nodeType":"413","messageId":"421","endLine":140,"endColumn":80},{"ruleId":"419","severity":1,"message":"420","line":140,"column":118,"nodeType":"413","messageId":"421","endLine":140,"endColumn":120},{"ruleId":"419","severity":1,"message":"420","line":140,"column":156,"nodeType":"413","messageId":"421","endLine":140,"endColumn":158},{"ruleId":"419","severity":1,"message":"420","line":155,"column":27,"nodeType":"413","messageId":"421","endLine":155,"endColumn":29},{"ruleId":"419","severity":1,"message":"420","line":155,"column":47,"nodeType":"413","messageId":"421","endLine":155,"endColumn":49},{"ruleId":"419","severity":1,"message":"420","line":167,"column":23,"nodeType":"413","messageId":"421","endLine":167,"endColumn":25},{"ruleId":"419","severity":1,"message":"420","line":176,"column":19,"nodeType":"413","messageId":"421","endLine":176,"endColumn":21},{"ruleId":"419","severity":1,"message":"422","line":188,"column":62,"nodeType":"413","messageId":"421","endLine":188,"endColumn":64},{"ruleId":"419","severity":1,"message":"422","line":188,"column":82,"nodeType":"413","messageId":"421","endLine":188,"endColumn":84},{"ruleId":"419","severity":1,"message":"422","line":191,"column":49,"nodeType":"413","messageId":"421","endLine":191,"endColumn":51},{"ruleId":"419","severity":1,"message":"422","line":191,"column":69,"nodeType":"413","messageId":"421","endLine":191,"endColumn":71},{"ruleId":"419","severity":1,"message":"422","line":195,"column":53,"nodeType":"413","messageId":"421","endLine":195,"endColumn":55},{"ruleId":"419","severity":1,"message":"422","line":195,"column":73,"nodeType":"413","messageId":"421","endLine":195,"endColumn":75},{"ruleId":"376","severity":1,"message":"423","line":3,"column":8,"nodeType":"378","messageId":"379","endLine":3,"endColumn":18},{"ruleId":"376","severity":1,"message":"424","line":10,"column":3,"nodeType":"378","messageId":"379","endLine":10,"endColumn":17},{"ruleId":"376","severity":1,"message":"425","line":15,"column":3,"nodeType":"378","messageId":"379","endLine":15,"endColumn":19},{"ruleId":"376","severity":1,"message":"426","line":16,"column":3,"nodeType":"378","messageId":"379","endLine":16,"endColumn":12},{"ruleId":"387","severity":1,"message":"427","line":51,"column":6,"nodeType":"389","endLine":51,"endColumn":8,"suggestions":"428"},{"ruleId":"419","severity":1,"message":"420","line":132,"column":25,"nodeType":"413","messageId":"421","endLine":132,"endColumn":27},{"ruleId":"419","severity":1,"message":"420","line":132,"column":49,"nodeType":"413","messageId":"421","endLine":132,"endColumn":51},{"ruleId":"419","severity":1,"message":"420","line":132,"column":71,"nodeType":"413","messageId":"421","endLine":132,"endColumn":73},{"ruleId":"419","severity":1,"message":"420","line":142,"column":22,"nodeType":"413","messageId":"421","endLine":142,"endColumn":24},{"ruleId":"419","severity":1,"message":"420","line":151,"column":20,"nodeType":"413","messageId":"421","endLine":151,"endColumn":22},{"ruleId":"376","severity":1,"message":"429","line":1,"column":37,"nodeType":"378","messageId":"379","endLine":1,"endColumn":43},{"ruleId":"376","severity":1,"message":"381","line":2,"column":23,"nodeType":"378","messageId":"379","endLine":2,"endColumn":29},{"ruleId":"419","severity":1,"message":"422","line":87,"column":33,"nodeType":"413","messageId":"421","endLine":87,"endColumn":35},{"ruleId":"419","severity":1,"message":"420","line":120,"column":24,"nodeType":"413","messageId":"421","endLine":120,"endColumn":26},{"ruleId":"419","severity":1,"message":"420","line":120,"column":57,"nodeType":"413","messageId":"421","endLine":120,"endColumn":59},{"ruleId":"419","severity":1,"message":"420","line":120,"column":88,"nodeType":"413","messageId":"421","endLine":120,"endColumn":90},{"ruleId":"376","severity":1,"message":"430","line":4,"column":8,"nodeType":"378","messageId":"379","endLine":4,"endColumn":16},{"ruleId":"376","severity":1,"message":"410","line":21,"column":13,"nodeType":"378","messageId":"379","endLine":21,"endColumn":24},{"ruleId":"387","severity":1,"message":"431","line":29,"column":8,"nodeType":"389","endLine":29,"endColumn":10,"suggestions":"432"},{"ruleId":"376","severity":1,"message":"433","line":57,"column":11,"nodeType":"378","messageId":"379","endLine":57,"endColumn":24},{"ruleId":"434","severity":1,"message":"435","line":64,"column":49,"nodeType":"436","messageId":"437","endLine":64,"endColumn":51},{"ruleId":"438","severity":1,"message":"439","line":67,"column":17,"nodeType":"440","messageId":"441","endLine":83,"endColumn":18},{"ruleId":"376","severity":1,"message":"442","line":110,"column":9,"nodeType":"378","messageId":"379","endLine":110,"endColumn":17},{"ruleId":"419","severity":1,"message":"422","line":189,"column":57,"nodeType":"413","messageId":"421","endLine":189,"endColumn":59},{"ruleId":"419","severity":1,"message":"422","line":231,"column":53,"nodeType":"413","messageId":"421","endLine":231,"endColumn":55},{"ruleId":"419","severity":1,"message":"422","line":260,"column":51,"nodeType":"413","messageId":"421","endLine":260,"endColumn":53},{"ruleId":"443","severity":1,"message":"444","line":275,"column":61,"nodeType":"445","endLine":275,"endColumn":76},{"ruleId":"419","severity":1,"message":"422","line":286,"column":58,"nodeType":"413","messageId":"421","endLine":286,"endColumn":60},{"ruleId":"376","severity":1,"message":"446","line":2,"column":20,"nodeType":"378","messageId":"379","endLine":2,"endColumn":27},{"ruleId":"376","severity":1,"message":"447","line":15,"column":12,"nodeType":"378","messageId":"379","endLine":15,"endColumn":21},{"ruleId":"376","severity":1,"message":"448","line":15,"column":23,"nodeType":"378","messageId":"379","endLine":15,"endColumn":35},{"ruleId":"376","severity":1,"message":"449","line":16,"column":12,"nodeType":"378","messageId":"379","endLine":16,"endColumn":21},{"ruleId":"376","severity":1,"message":"450","line":16,"column":23,"nodeType":"378","messageId":"379","endLine":16,"endColumn":35},{"ruleId":"419","severity":1,"message":"422","line":114,"column":43,"nodeType":"413","messageId":"421","endLine":114,"endColumn":45},{"ruleId":"419","severity":1,"message":"420","line":114,"column":81,"nodeType":"413","messageId":"421","endLine":114,"endColumn":83},{"ruleId":"419","severity":1,"message":"422","line":118,"column":51,"nodeType":"413","messageId":"421","endLine":118,"endColumn":53},{"ruleId":"419","severity":1,"message":"420","line":118,"column":91,"nodeType":"413","messageId":"421","endLine":118,"endColumn":93},{"ruleId":"419","severity":1,"message":"420","line":130,"column":42,"nodeType":"413","messageId":"421","endLine":130,"endColumn":44},{"ruleId":"419","severity":1,"message":"420","line":130,"column":97,"nodeType":"413","messageId":"421","endLine":130,"endColumn":99},{"ruleId":"419","severity":1,"message":"420","line":138,"column":46,"nodeType":"413","messageId":"421","endLine":138,"endColumn":48},{"ruleId":"387","severity":1,"message":"451","line":151,"column":8,"nodeType":"389","endLine":151,"endColumn":10,"suggestions":"452"},{"ruleId":"387","severity":1,"message":"453","line":218,"column":7,"nodeType":"389","endLine":218,"endColumn":14,"suggestions":"454"},{"ruleId":"419","severity":1,"message":"420","line":328,"column":26,"nodeType":"413","messageId":"421","endLine":328,"endColumn":28},{"ruleId":"419","severity":1,"message":"420","line":335,"column":26,"nodeType":"413","messageId":"421","endLine":335,"endColumn":28},{"ruleId":"419","severity":1,"message":"420","line":342,"column":30,"nodeType":"413","messageId":"421","endLine":342,"endColumn":32},{"ruleId":"419","severity":1,"message":"420","line":22,"column":38,"nodeType":"413","messageId":"421","endLine":22,"endColumn":40},{"ruleId":"419","severity":1,"message":"422","line":23,"column":40,"nodeType":"413","messageId":"421","endLine":23,"endColumn":42},{"ruleId":"419","severity":1,"message":"422","line":24,"column":23,"nodeType":"413","messageId":"421","endLine":24,"endColumn":25},{"ruleId":"387","severity":1,"message":"455","line":34,"column":6,"nodeType":"389","endLine":34,"endColumn":8,"suggestions":"456"},{"ruleId":"419","severity":1,"message":"422","line":62,"column":15,"nodeType":"413","messageId":"421","endLine":62,"endColumn":17},{"ruleId":"419","severity":1,"message":"422","line":65,"column":15,"nodeType":"413","messageId":"421","endLine":65,"endColumn":17},{"ruleId":"419","severity":1,"message":"422","line":68,"column":15,"nodeType":"413","messageId":"421","endLine":68,"endColumn":17},{"ruleId":"419","severity":1,"message":"422","line":230,"column":36,"nodeType":"413","messageId":"421","endLine":230,"endColumn":38},{"ruleId":"376","severity":1,"message":"457","line":5,"column":9,"nodeType":"378","messageId":"379","endLine":5,"endColumn":29},{"ruleId":"419","severity":1,"message":"422","line":17,"column":24,"nodeType":"413","messageId":"421","endLine":17,"endColumn":26},{"ruleId":"419","severity":1,"message":"422","line":20,"column":32,"nodeType":"413","messageId":"421","endLine":20,"endColumn":34},{"ruleId":"419","severity":1,"message":"422","line":20,"column":68,"nodeType":"413","messageId":"421","endLine":20,"endColumn":70},{"ruleId":"376","severity":1,"message":"458","line":2,"column":8,"nodeType":"378","messageId":"379","endLine":2,"endColumn":18},{"ruleId":"376","severity":1,"message":"402","line":3,"column":10,"nodeType":"378","messageId":"379","endLine":3,"endColumn":14},{"ruleId":"438","severity":1,"message":"439","line":7,"column":3,"nodeType":"440","messageId":"441","endLine":23,"endColumn":4},{"ruleId":"376","severity":1,"message":"459","line":1,"column":16,"nodeType":"378","messageId":"379","endLine":1,"endColumn":24},{"ruleId":"376","severity":1,"message":"458","line":2,"column":8,"nodeType":"378","messageId":"379","endLine":2,"endColumn":18},{"ruleId":"376","severity":1,"message":"460","line":8,"column":8,"nodeType":"378","messageId":"379","endLine":8,"endColumn":18},{"ruleId":"376","severity":1,"message":"382","line":2,"column":9,"nodeType":"378","messageId":"379","endLine":2,"endColumn":14},{"ruleId":"376","severity":1,"message":"381","line":2,"column":16,"nodeType":"378","messageId":"379","endLine":2,"endColumn":22},{"ruleId":"376","severity":1,"message":"459","line":1,"column":16,"nodeType":"378","messageId":"379","endLine":1,"endColumn":24},{"ruleId":"376","severity":1,"message":"461","line":1,"column":26,"nodeType":"378","messageId":"379","endLine":1,"endColumn":35},{"ruleId":"387","severity":1,"message":"462","line":15,"column":8,"nodeType":"389","endLine":15,"endColumn":10,"suggestions":"463"},{"ruleId":"464","severity":1,"message":"465","line":47,"column":29,"nodeType":"386","endLine":47,"endColumn":123},{"ruleId":"464","severity":1,"message":"465","line":80,"column":29,"nodeType":"386","endLine":80,"endColumn":123},{"ruleId":"376","severity":1,"message":"466","line":3,"column":8,"nodeType":"378","messageId":"379","endLine":3,"endColumn":17},{"ruleId":"376","severity":1,"message":"467","line":7,"column":25,"nodeType":"378","messageId":"379","endLine":7,"endColumn":38},{"ruleId":"376","severity":1,"message":"468","line":12,"column":11,"nodeType":"378","messageId":"379","endLine":12,"endColumn":23},{"ruleId":"438","severity":1,"message":"439","line":132,"column":5,"nodeType":"440","messageId":"441","endLine":143,"endColumn":6},{"ruleId":"469","severity":1,"message":"470","line":138,"column":9,"nodeType":"471","messageId":"472","endLine":142,"endColumn":32},{"ruleId":"419","severity":1,"message":"422","line":8,"column":36,"nodeType":"413","messageId":"421","endLine":8,"endColumn":38},{"ruleId":"376","severity":1,"message":"473","line":9,"column":10,"nodeType":"378","messageId":"379","endLine":9,"endColumn":12},{"ruleId":"376","severity":1,"message":"474","line":15,"column":8,"nodeType":"378","messageId":"379","endLine":15,"endColumn":13},{"ruleId":"376","severity":1,"message":"475","line":26,"column":27,"nodeType":"378","messageId":"379","endLine":26,"endColumn":43},{"ruleId":"376","severity":1,"message":"476","line":27,"column":28,"nodeType":"378","messageId":"379","endLine":27,"endColumn":45},{"ruleId":"376","severity":1,"message":"477","line":35,"column":12,"nodeType":"378","messageId":"379","endLine":35,"endColumn":26},{"ruleId":"434","severity":1,"message":"435","line":94,"column":39,"nodeType":"436","messageId":"437","endLine":94,"endColumn":41},{"ruleId":"438","severity":1,"message":"439","line":95,"column":17,"nodeType":"440","messageId":"441","endLine":102,"endColumn":18},{"ruleId":"469","severity":1,"message":"470","line":98,"column":21,"nodeType":"471","messageId":"472","endLine":99,"endColumn":57},{"ruleId":"387","severity":1,"message":"478","line":112,"column":8,"nodeType":"389","endLine":112,"endColumn":43,"suggestions":"479"},{"ruleId":"419","severity":1,"message":"420","line":264,"column":39,"nodeType":"413","messageId":"421","endLine":264,"endColumn":41},{"ruleId":"419","severity":1,"message":"420","line":264,"column":79,"nodeType":"413","messageId":"421","endLine":264,"endColumn":81},{"ruleId":"419","severity":1,"message":"420","line":287,"column":24,"nodeType":"413","messageId":"421","endLine":287,"endColumn":26},{"ruleId":"419","severity":1,"message":"420","line":296,"column":27,"nodeType":"413","messageId":"421","endLine":296,"endColumn":29},{"ruleId":"419","severity":1,"message":"420","line":20,"column":20,"nodeType":"413","messageId":"421","endLine":20,"endColumn":22},{"ruleId":"387","severity":1,"message":"480","line":27,"column":8,"nodeType":"389","endLine":27,"endColumn":10,"suggestions":"481"},{"ruleId":"419","severity":1,"message":"420","line":40,"column":31,"nodeType":"413","messageId":"421","endLine":40,"endColumn":33},{"ruleId":"419","severity":1,"message":"420","line":48,"column":31,"nodeType":"413","messageId":"421","endLine":48,"endColumn":33},{"ruleId":"419","severity":1,"message":"420","line":56,"column":33,"nodeType":"413","messageId":"421","endLine":56,"endColumn":35},{"ruleId":"419","severity":1,"message":"420","line":64,"column":31,"nodeType":"413","messageId":"421","endLine":64,"endColumn":33},{"ruleId":"434","severity":1,"message":"482","line":42,"column":59,"nodeType":"436","messageId":"483","endLine":42,"endColumn":61},{"ruleId":"376","severity":1,"message":"484","line":79,"column":25,"nodeType":"378","messageId":"379","endLine":79,"endColumn":39},{"ruleId":"376","severity":1,"message":"485","line":82,"column":11,"nodeType":"378","messageId":"379","endLine":82,"endColumn":22},{"ruleId":"376","severity":1,"message":"486","line":87,"column":11,"nodeType":"378","messageId":"379","endLine":87,"endColumn":27},{"ruleId":"376","severity":1,"message":"461","line":1,"column":26,"nodeType":"378","messageId":"379","endLine":1,"endColumn":35},"no-native-reassign",["487"],"no-negated-in-lhs",["488"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'homePic' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["489"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'app' is defined but never used.","'replaceAll' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["490","491"],"'path' is assigned a value but never used.","'Route' is defined but never used.","'AuthContext' is defined but never used.","'Form' is defined but never used.","'CreateAdForm' is defined but never used.","'PrivateRoute' is defined but never used.","'phone' is defined but never used.","'firebase' is defined but never used.",["492"],"'Alert' is defined but never used.","'Typography' is defined but never used.","'actionTypes' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useContext' is defined but never used.","React Hook useEffect has missing dependencies: 'props.headingRef' and 'runOnPlatforms'. Either include them or remove the dependency array.",["493"],["494","495"],"eqeqeq","Expected '!==' and instead saw '!='.","unexpected","Expected '===' and instead saw '=='.","'removeIcon' is defined but never used.","'LocationSelect' is defined but never used.","'geocodeByAddress' is defined but never used.","'getLatLng' is defined but never used.","React Hook useEffect has missing dependencies: 'props.audience.location' and 'props.headingRef'. Either include them or remove the dependency array. If 'setLocationList' needs the current value of 'props.audience.location', you can also switch to useReducer instead of useState and read 'props.audience.location' in the reducer.",["496"],"'useRef' is defined but never used.","'AdViewFb' is defined but never used.","React Hook useEffect has a missing dependency: 'props.headingRef'. Either include it or remove the dependency array.",["497"],"'lastPlacement' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'isCustom' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'addDays' is defined but never used.","'alertType' is assigned a value but never used.","'setAlertType' is assigned a value but never used.","'showAlert' is assigned a value but never used.","'setShowAlert' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.adInfo.budgetAndSchedule' and 'props.headingRef'. Either include them or remove the dependency array.",["498"],"React Hook useEffect has missing dependencies: 'asapSchedule', 'customSchedule', 'dailyBudgetFb', 'endDate', 'googleDailyBudget', 'isDailyBudget', 'isLifetimeBudget', 'lifetimeBudgetFb', 'period', 'props.adInfo.runOn', and 'startDate'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLifetimeBudgetFb' needs the current value of 'dailyBudgetFb'.",["499"],"React Hook useEffect has missing dependencies: 'props.headingRef', 'props.state.subscriptionPlan', and 'shownCard'. Either include them or remove the dependency array. If 'setSelectedPlan' needs the current value of 'props.state.subscriptionPlan', you can also switch to useReducer instead of useState and read 'props.state.subscriptionPlan' in the reducer.",["500"],"'selectButtonDisabled' is assigned a value but never used.","'Auxilliary' is defined but never used.","'useState' is defined but never used.","'twitterAds' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'props.runOnPlatforms'. Either include it or remove the dependency array.",["501"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'PropTypes' is defined but never used.","'interestsData' is defined but never used.","'customStyles' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'db' is defined but never used.","'Axios' is defined but never used.","'setRunOnFacebook' is assigned a value but never used.","'setRunOnInstagram' is assigned a value but never used.","'pictureOrVideo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser.uid', 'props.facebookAd.adDetails', and 'props.facebookAd.placements'. Either include them or remove the dependency array.",["502"],"React Hook useEffect has a missing dependency: 'props.selectedDetails'. Either include it or remove the dependency array.",["503"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'setButtonLabel' is assigned a value but never used.","'groupStyles' is assigned a value but never used.","'groupBadgeStyles' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"504","fix":"505"},{"messageId":"506","fix":"507","desc":"508"},{"messageId":"509","fix":"510","desc":"511"},{"desc":"512","fix":"513"},{"desc":"514","fix":"515"},{"messageId":"506","fix":"516","desc":"508"},{"messageId":"509","fix":"517","desc":"511"},{"desc":"518","fix":"519"},{"desc":"520","fix":"521"},{"desc":"522","fix":"523"},{"desc":"524","fix":"525"},{"desc":"526","fix":"527"},{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},{"desc":"532","fix":"533"},"Update the dependencies array to be: [history, props]",{"range":"534","text":"535"},"removeEscape",{"range":"536","text":"537"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"538","text":"539"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [props]",{"range":"540","text":"541"},"Update the dependencies array to be: [props.headingRef, runOnPlatforms]",{"range":"542","text":"543"},{"range":"544","text":"537"},{"range":"545","text":"539"},"Update the dependencies array to be: [props.audience.location, props.headingRef]",{"range":"546","text":"547"},"Update the dependencies array to be: [props.headingRef]",{"range":"548","text":"549"},"Update the dependencies array to be: [props.adInfo.budgetAndSchedule, props.headingRef]",{"range":"550","text":"551"},"Update the dependencies array to be: [asapSchedule, customSchedule, dailyBudgetFb, endDate, googleDailyBudget, isDailyBudget, isLifetimeBudget, lifetimeBudgetFb, period, props.adInfo.runOn, startDate, state]",{"range":"552","text":"553"},"Update the dependencies array to be: [props.headingRef, props.state.subscriptionPlan, shownCard]",{"range":"554","text":"555"},"Update the dependencies array to be: [props.runOnPlatforms]",{"range":"556","text":"557"},"Update the dependencies array to be: [currentUser.uid, props.adInfo.facebookAd.adDetails, props.facebookAd.adDetails, props.facebookAd.placements]",{"range":"558","text":"559"},"Update the dependencies array to be: [props.selectedDetails]",{"range":"560","text":"561"},[1181,1190],"[history, props]",[3068,3069],"",[3068,3068],"\\",[1737,1746],"[props]",[2591,2593],"[props.headingRef, runOnPlatforms]",[3353,3354],[3353,3353],[1409,1411],"[props.audience.location, props.headingRef]",[990,992],"[props.headingRef]",[5721,5723],"[props.adInfo.budgetAndSchedule, props.headingRef]",[8117,8124],"[asapSchedule, customSchedule, dailyBudgetFb, endDate, googleDailyBudget, isDailyBudget, isLifetimeBudget, lifetimeBudgetFb, period, props.adInfo.runOn, startDate, state]",[1077,1079],"[props.headingRef, props.state.subscriptionPlan, shownCard]",[627,629],"[props.runOnPlatforms]",[3862,3897],"[currentUser.uid, props.adInfo.facebookAd.adDetails, props.facebookAd.adDetails, props.facebookAd.placements]",[798,800],"[props.selectedDetails]"]